{
    "smartparse": {
        "week": [
            ["monday", 2],
            ["mon", 2, "(?=\\W|\\z)"],
            ["tuesday", 3],
            ["tue", 3, "(?=\\W|\\z)"],
            ["wednesday", 4],
            ["wed", 4, "(?=\\W|\\z)"],
            ["thursday", 5],
            ["thu", 5, "(?=\\W|\\z)"],
            ["friday", 6],
            ["fri", 6, "(?=\\W|\\z)"],
            ["saturday", 7],
            ["sat", 7, "(?=\\W|\\z)"],
            ["sunday", 1],
            ["sun", 1, "(?=\\W|\\z)"]
        ],
        "month": [
            ["january", 1],
            ["jan", 1, "(?=\\W|\\z)"],
            ["february", 2],
            ["feb", 2, "(?=\\W|\\z)"],
            ["march", 3],
            ["march", 3, "(?=\\W|\\z)"],
            ["april", 4],
            ["apr", 4, "(?=\\W|\\z)"],
            ["may", 5, "(?=\\W|\\z)"],
            ["june", 6],
            ["jun", 6, "(?=\\W|\\z)"],
            ["july", 7],
            ["jul", 7, "(?=\\W|\\z)"],
            ["august", 8],
            ["aug", 8, "(?=\\W|\\z)"],
            ["september", 9],
            ["sep", 9, "(?=\\W|\\z)"],
            ["october", 10],
            ["oct", 10, "(?=\\W|\\z)"],
            ["november", 11],
            ["nov", 11, "(?=\\W|\\z)"],
            ["december", 12],
            ["dec", 12, "(?=\\W|\\z)"]
        ],
        "numeric": [
            ["a", 1],
            ["one", 1],
            ["two", 2],
            ["three", 3],
            ["four", 4],
            ["five", 5],
            ["six", 6],
            ["seven", 7],
            ["eight", 8],
            ["nine", 9],
            ["ten", 10],
            ["20", 20],
            ["21", 21],
            ["22", 22],
            ["23", 23],
            ["24", 24],
            ["10", 10],
            ["11", 11],
            ["12", 12],
            ["13", 13],
            ["14", 14],
            ["15", 15],
            ["16", 16],
            ["17", 17],
            ["18", 18],
            ["19", 19],
            ["1", 1],
            ["2", 2],
            ["3", 3],
            ["4", 4],
            ["5", 5],
            ["6", 6],
            ["7", 7],
            ["8", 8],
            ["9", 9]
        ],
        "relday": [
            ["tomorrow", 1],
            ["tmrw", 1, "(?=\\W|\\z)"],
            ["today", 3]
        ],
        "reltime": [
            ["in the morning", 1],
            ["morning", 1],
            ["mrng", 1, "(?=\\W|\\z)"],
            ["midday", 2],
            ["afternoon", 2],
            ["aftrn", 2, "(?=\\W|\\z)"],
            ["in the evening", 3],
            ["evening", 3],
            ["evnng", 3, "(?=\\W|\\z)"],
            ["night", 3],
            ["nght", 3, "(?=\\W|\\z)"]
        ],
        "repitrs": [
            ["day", 2],
            ["week", 3],
            ["month", 5],
            ["year", 7]
        ],
        "lookup_rules": [{
                "comment": "use one block for each rule..."
            }

            , {
                "regex": ["(in (\\numeric) day\\w*)", "(in() a day)(?:\\W|\\z)"],
                "example": "cinema in two days",
                "script": "local res=getNow2()+24*60*60*getNumeric(getMatch(2,1));return {ts=res,timed=0};",
                "rules": {
                    "1": "numeric|days"
                },
                "relative": 1
            }

            , {
                "regex": ["(in (\\numeric) hour\\w*)", "(in() an hour)(?:\\W|\\z)", "(in() a hour)(?:\\W|\\z)"],
                "example": "cinema in two hours",
                "script": "local res=getNow2()+60*60*getNumeric(getMatch(2,1));return {ts=res,timed=1};",
                "rules": {
                    "1": "numeric|hours"
                },
                "relative": 1
            }

            , {
                "regex": ["(in (\\numeric) week\\w*)", "(in() a week)(?:\\W|\\z)"],
                "script": "local res=getNow2()+7*24*60*60*getNumeric(getMatch(2,1));return {ts=res,timed=0};",
                "rules": {
                    "1": "numeric|weeks"
                },
                "relative": 1
            }

            , {
                "regex": ["(in (\\numeric) month\\w*)", "(in() a month)(?:\\W|\\z)"],
                "script": "local res=getNow2();res=addMonth(res,getNumeric(getMatch(2,1)));return {ts=res,timed=0};",
                "rules": {
                    "1": "numeric|months"
                },
                "relative": 1
            }

            , {
                "regex": ["(in (\\numeric) year\\w*)", "(in() a year)(?:\\W|\\z)"],
                "script": "local res=getNow2();res=addMonth(res,12*getNumeric(getMatch(2,1)));return {ts=res,timed=0};",
                "rules": {
                    "1": "numeric|years"
                },
                "relative": 1
            }

            , {
                "regex": ["((\\d+) (\\month) (\\d\\d\\d\\d))"],
                "script": "local res=getNow2();res=replaceYear(res,getMatch(4));res=replaceMonth(res,getMatch(3));res=replaceDate(res,getMatch(2));if res<getNow() then res=addMonth(res,12);res=replaceMonth(res,getMatch(3));res=replaceDate(res,getMatch(2)); end;return {ts=res,timed=0};",
                "rules": {
                    "3": "year",
                    "2": "numeric|month",
                    "1": "days"
                }
            }

            , {
                "regex": ["((\\d+) (\\month))"],
                "example": "meeting 27 september",
                "note": "replacing date/month twice because of 29 feb",
                "script": "local res=getNow2();res=replaceMonth(res,getMatch(3));res=replaceDate(res,getMatch(2));if res<getNow() then res=addMonth(res,12);res=replaceMonth(res,getMatch(3));res=replaceDate(res,getMatch(2)); end;return {ts=res,timed=0};",
                "rules": {
                    "2": "month",
                    "1": "days"
                },
                "checkpasttime": "year"
            }

            , {
                "regex": ["(every (\\week))"],
                "script": "local res=getNow2();res=replaceWeekDay(res,getMatch(2)); setFastF(7*24*60*60); res = checkFastF(res); return {ts=res,timed=0,rept=3};"
            }

            , {
                "regex": ["(every (\\repitrs))"],
                "script": "local repitr=getRepitr(getMatch(2)); local res=-1;if getNow2() == getNow() then res = getNow(); end; return {ts=res,rept=repitr};"
            }

            , {
                "regex": ["(\\relday)"],
                "example": "tomorrow food shopping",
                "script": "local res=getNow2();res=addRelday(res,getMatch(1));return {ts=res,timed=0};",
                "rules": {
                    "0": "relday"
                }
            }

            , {
                "regex": ["(next (\\week))"],
                "script": "local res=getNow2();res=replaceWeekDay(res,getMatch(2));res=res+7*24*60*60;return {ts=res,timed=0};",
                "rules": {
                    "1": "week|next"
                }
            }

            , {
                "regex": ["(on (\\week))", "((\\week))"],
                "example": "work on friday",
                "script": "local res=getNow2();res=replaceWeekDay(res,getMatch(2)); setFastF(7*24*60*60); res = checkFastF(res); return {ts=res,timed=0};",
                "rules": {
                    "1": "week"
                },
                "checkpasttime": "week"
            }

            , {
                "regex": ["(at (\\d+)[:\\.](\\d\\d)(?:pm| pm|p.m.| p.m.))(?:\\W|\\z)", "((\\d+)[:\\.](\\d\\d)(?:pm| pm|p.m.| p.m.))(?:\\W|\\z)"],
                "script": "local res=getNow2();local hr=tonumber(getMatch(2,-1));if hr>=0 and hr<12 then hr=hr+12; end; res=replaceHour(res,hr);res=replaceMinutes(res,getMatch(3,-1)); res = checkFastF(res); return {ts=res,timed=1};",
                "rules": {
                    "1": "hours",
                    "2": "minutes",
                    "3": "pm"
                },
                "checkpasttime": "day"
            }

            , {
                "regex": ["(at (\\d+)(?:pm| pm|p.m.| p.m.))(?:\\W|\\z)", "((\\d+)(?:pm| pm|p.m.| p.m.))(?:\\W|\\z)"],
                "script": "local res=getNow2();local hr=tonumber(getMatch(2,-1));if hr>=0 and hr<12 then hr=hr+12; end; res=replaceHour(res,hr);res=replaceMinutes(res,0); res = checkFastF(res); return {ts=res,timed=1};",
                "rules": {
                    "1": "hours",
                    "2": "pm"
                },
                "checkpasttime": "day"
            }

            , {
                "regex": ["(at (\\d+)[:\\.](\\d\\d)(?:am| am|a.m.| a.m.))(?:\\W|\\z)", "((\\d+)[:\\.](\\d\\d)(?:am| am|a.m.| a.m.))(?:\\W|\\z)"],
                "script": "shareddata.force_pm = 0;local res=getNow2();local hr=tonumber(getMatch(2,-1));if hr>=12 then hr=hr-12; end; res=replaceHour(res,hr);res=replaceMinutes(res,getMatch(3,-1)); res = checkFastF(res); return {ts=res,timed=1};",
                "rules": {
                    "1": "hours",
                    "2": "minutes",
                    "3": "am"
                },
                "checkpasttime": "day"
            }

            , {
                "regex": ["(at (\\d+)(?:am| am|a.m.| a.m.))(?:\\W|\\z)", "((\\d+)(?:am| am|a.m.| a.m.))(?:\\W|\\z)"],
                "script": "shareddata.force_pm = 0;local res=getNow2();local hr=tonumber(getMatch(2,-1));if hr>=12 then hr=hr-12; end;res=replaceHour(res,hr);res=replaceMinutes(res,0); res = checkFastF(res); return {ts=res,timed=1};",
                "rules": {
                    "1": "hours",
                    "2": "am"
                },
                "checkpasttime": "day"
            }

            , {
                "regex": ["(at (\\d+)[:\\.](\\d\\d))(?:\\W|\\z)"],
                "script": "local res=getNow2();res=replaceHour(res,getMatch(2));res=replaceMinutes(res,getMatch(3)); res = checkFastF(res); return {ts=res,timed=1};",
                "rules": {
                    "1": "hours",
                    "2": "minutes"
                },
                "checkpasttime": "day"
            }

            , {
                "regex": ["(at (\\d+))(?:\\W|\\z)"],
                "example": "gym tomorrow at 13",
                "script": "local res=getNow2();res=replaceHour(res,getMatch(2));res=replaceMinutes(res,0); res = checkFastF(res); return {ts=res,timed=1};",
                "rules": {
                    "1": "hours"
                },
                "checkpasttime": "day"
            }

            , {
                "regex": ["((\\month) (\\d+))"],
                "example": "friends wedding may 20",
                "script": "local res=getNow2();res=replaceMonth(res,getMatch(2));local dater=getMatch(3);if tonumber(dater)>2011 then res=replaceYear(res,dater); else res=replaceDate(res,dater); end; setFastF(365*24*60*60); res = checkFastF(res); return {ts=res,timed=0};",
                "rules": {
                    "1": "month",
                    "2": "days"
                },
                "checkpasttime": "year"
            }

            , {
                "regex": ["(\\reltime)"],
                "script": "local res=getNow2();res=addReltime(res,getMatch(1));res=checkFastF(res);return {ts=res,timed=1};",
                "rules": {
                    "0": "reltime"
                },
                "checkpasttime": "day"
            }

        ]
    },
    "task_categs": {

        "flag-abkhazia": ["abkhazia"],
        "flag-algeria": ["algeria"],
        "flag-argentina": ["argentin"],
        "flag-australia": ["australi", "sydney"],
        "flag-belarus": ["belarus"],
        "flag-belgium": ["belgium"],
        "flag-brazil": ["brazil", "rio"],
        "flag-bulgaria": ["bulgaria", "sofia"],
        "flag-cameroon": ["cameroon"],
        "flag-canada": ["canada", "toronto", "vancouver"],
        "flag-canary-islands": ["canary"],
        "flag-chile": ["chile", "santiago"],
        "flag-china": ["china", "beijing"],
        "flag-colombia": ["colombia"],
        "flag-costa-rica": ["costa-rica"],
        "flag-croatia": ["croatia"],
        "flag-cuba": ["cuba", "havana"],
        "flag-cyprus": ["cyprus", "limasol"],
        "flag-czech-republic": ["czech", "prague"],
        "flag-denmark": ["denmark"],
        "flag-egypt": ["egypt", "cairo"],
        "flag-estonia": ["estonia"],
        "flag-england": ["england"],
        "flag-eu": ["euro","europe"],
        "flag-finland": ["finland", "helsinki"],
        "flag-france": ["france", "paris", "azur"],
        "flag-georgia": ["georgia", "tbilisi"],
        "flag-germany": ["german", "berlin"],
        "flag-greece": ["greece", "athens"],
        "flag-hongkong": ["hongkong", "hong kong"],
        "flag-hungary": ["hungary", "budapest"],
        "flag-iceland": ["iceland"],
        "flag-india": ["india", "goa"],
        "flag-indonesia": ["indonesia"],
        "flag-israel": ["israel", "tel aviv"],
        "flag-italy": ["italy", "itali", "rome", "florenze", "neapoli", "venice"],
        "flag-jamaica": ["jamaica"],
        "flag-japan": ["japan", "tokyo", "osaka"],
        "flag-kenya": ["kenya"],
        "flag-lithuania": ["lithuania"],
        "flag-luxembourg": ["luxembourg"],
        "flag-korea": ["korea","south korea"],
        "flag-mexico": ["mexico"],
        "flag-moldova": ["moldov"],
        "flag-monaco": ["monaco"],
        "flag-morocco": ["morocco"],
        "flag-namibia": ["namibia"],
        "flag-nepal": ["nepal"],
        "flag-netherlands": ["netherland", "holland", "amster", "amsterdam"],
        "flag-new-zealand": ["zealand","new zealand"],
        "flag-niger": ["niger"],
        "flag-north-korea": ["north korea", "kim jong"],
        "flag-norway": ["norway"],
        "flag-palestine": ["palestine"],
        "flag-panama": ["panama"],
        "flag-peru": ["peru"],
        "flag-philippines": ["philippines"],
        "flag-pirate": ["pirate", "jolly roger", "Jack Sparrow"],
        "flag-poland": ["poland", "warsaw"],
        "flag-republic-of-the-congo": ["congo"],
        "flag-romania": ["romania"],
        "flag-south-africa": ["africa", "south africa"],
        "flag-russia": ["russia", "moscow", "petersburg", "sochi"],
        "flag-portugal": ["portugal"],
        "flag-scotland": ["scotland"],
        "flag-slovakia": ["slovakia"],
        "flag-slovenia": ["slovenia"],
        "flag-sudan": ["sudan"],
        "flag-spain": ["spain", "madrid", "barcelona"],
        "flag-suriname": ["suriname"],
        "flag-sweden": ["sweden","swed", "stockholm"],
        "flag-switzerland": ["switzerland"],
        "flag-thailand": ["thai", "thailand"],
        "flag-turkey": ["turkey", "istanbul"],
        "flag-uk": ["london", "kingdom"],
        "flag-ukraine": ["ukrain", "kiev", "kyiv"],
        "flag-uruguay": ["uruguay"],
        "flag-usa": ["usa", "states", "united states", "america", "new york", "nyc", "chicago", "denver", "angeles", "los angeles", "francisco", "san francisco", "californi", "miami", "florid", "atlanta", "alaska", "california"],
        "flag-venezuela": ["venezuel"],
        "flag-vietnam": ["vietnam"],

        "bag": ["shop", "order", "purchase","shopping","buy"],
        "a-to-b": ["route", "destination", "visit", "move", "road", "ride"],
        "alarm": ["alarm", "urgent", "important", "police", "fireman", "firefighter", "fire department", "cops"],
        "ambulance": ["ambulance", "112", "03", "911", "hospital"],
        "baby-foot": ["newborn", "baby", "child", "foot", "birth"],
        "babytoy": ["babytoy", "beanbag", "children", "birth"],
        "barcode": ["barcode", "code", "qr"],
        "bath": ["bath", "relax", "shower", "sauna"],
        "bee": ["flys", "bee", "insects", "honey"],
        "beer": ["beer", "lager", "alco"],
        "travel": ["travel", "trip", "luggage", "pack", "packing"],
        "books": ["read", "book", "literature"],
        "paid-tie": ["work", "lead", "deal", "client", "customer", "meeting", "office", "presentation", "errand"],
        "gym": ["training", "workout", "work-out", "sport", "gym", "fitness"],
        "tools": ["repair", "service", "tool", "fix"],
        "recipe": ["recipe"],
        "vacations": ["vacation", "recreation", "spot", "sea", "ocean"],
        "video": ["film", "movie", "watch", "video", "show", "cinema"],
        "plane": ["plane", "air", "aero", "avia", "flight"],
        "pencil": ["blog", "write", "post", "site", "essay"],
        "money": ["money", "credit", "borrow", "loan", "pay", "invest", "cash"],
        "medicine": ["medicine", "cure", "heal", "doctor", "hospital", "pill", "chemistry"],
        "idea": ["idea", "quote", "thought", "light", "lamp", "bulb"],
        "grocery": ["buy", "grocer", "food", "fruit", "vegetabl", "market", "marketplace"],
        "calendar": ["calendar", "congrat", "event", "date", "itinerary", "week", "month", "agenda", "scheduled", "future","monday","tuesday","wednesday","thursday","friday","saturday","sunday"],
        "construction": ["job", "construction", "in progress"],
        "contact": ["contact", "invite", "post"],
        "notes1": ["mail"],
        "star": ["remind", "favor", "opportunit", "project", "friend", "favourite","today","personal"],
        "passport": ["passport", "document", "legal", "council", "application"],
        "invoice": ["tax", "invoice", "bill", "insurance", "paper"],
        "gift": ["gift", "present", "celebretion"],
        "delivery": ["car", "auto", "vehicle", "drive"],
        "home": ["home", "apartment", "house", "rent", "famil"],
        "lock": ["lock", "secret", "private"],
        "palette": ["design", "art", "interior", "exhibit", "pantone", "color"],
        "phone": ["call", "phone"],
        "cargo": ["airplane"],
        "bike": ["bike", "bicycle"],
        "billiard": ["billiard", "8 ball", "pool"],
        "bird-nest": ["bird", "nest", "starling"],
        "blackberries": ["berries", "blackberries"],
        "blackboard": ["school", "lesson", "blackboard", "math", "physics"],
        "blood": ["blood", "analysis", "hemoglobin", "rhesus", "donor"],
        "bomb": ["bomb", "dynamite", "boom"],
        "bone": ["bone", "delicacy", "dog", "dogfood"],
        "paid-apple": ["apple", "fruit"],
        "achtung": ["important", "forget", "urgent", "traffic accident", "car accident"],
        "award": ["target", "attainment", "champion", "award", "competition", "goal", "reward", "prize"],
        "brush1": ["brush", "paint", "art", "sketch", "design"],
        "budget-calculator": ["budget", "calculator", "howmuch"],
        "bug-fixing": ["bug", "bugfix"],
        "cabin": ["cabin", "ski", "alps", "winter", "mountain"],
        "campfire": ["trekking", "campfire", "fire", "rest"],
        "cart": ["grocery", "buy", "food", "walmart" , "shopping", "shop"],
        "casino": ["casino", "rate", "gamble", "game", "card", "ace"],
        "cat": ["cat", "pet", "kitty"],
        "champagne": ["celebration", "anniversary", "champagne","holiday","special","christmas","new year"],
        "paid2-checkmark": ["todo", "to do", "to-do", "checklist", "checkmark", "done", "complete", "reminder", "things to do", "notif","task","tasks"],
        "paid2-camera": ["camera", "foto", "photo", "lens", "canon", "nikon"],
        "chess": ["chess", "game", "tower"],
        "chinese-lantern": ["china","chinese"],
        "church": ["church", "temple", "religion"],
        "cleaning": ["cleaning", "clean"],
        "clock": ["time", "clock", "alarmclock"],
        "coins": ["coin", "numismatics", "token"],
        "color-palette": ["design", "interior", "decoration", "exhibition", "color", "pantone"],
        "crab": ["crab"],
        "david-star": ["david-star", "israel", "jerusalem"],
        "diving": ["diving", "underwater"],
        "doctor": ["doctor", "hospital"],
        "dog": ["dog", "animal", "pet", "puppy"],
        "download": ["download", "cloud"],
        "easter-egg": ["easter", "egg"],
        "paid-education": ["school", "teach", "study", "learn", "universit", "college", "stud", "dissertat", "diplom", "math", "physic", "science"],
        "facebook": ["facebook"],
        "fish": ["fish", "sushi", "sashimi", "trout", "tuna"],
        "fishing": ["fishing", "spinning", "spoon-bait"],
        "paid-flower": ["flower", "autumn", "flora", "blossom", "floret"],
        "football": ["football", "soccer", "socker"],
        "giftcard": ["certificat", "giftcard", "gift card"],
        "grocery": ["store", "buy", "product", "food", "fruit", "vegetable", "market", "grocery", "groceri"],
        "hammok": ["vacation", "summer", "hammock", "rest", "recreation", "relaxation", "beach"],
        "helicopter": ["helicopter", "heli", "copter", "rotor plane", "rotorcraft"],
        "leaf": ["autumn", "leaf"],
        "locked": ["secret", "private", "locked"],
        "mission": ["mission", "mountain", "rosa khutor", "whistler", "aspen", "backcountry", "freeride", "courchevel", "snowboard"],
        "mobile": ["telephone", "mobile", "smartphone", "iphone"],
        "olympic-rings": ["olympic", "olympiad"],
        "om": ["yoga"],
        "paid-baby": ["child", "childrengarden", "baby", "kids"],
        "delivery": ["car", "auto", "amazon", "parcel", "delivery", "package", "shipment", "order", "ebay"],
        "paid-gamecontroller": ["game", "xbox", "controller", "gamepad", "ps4", "dendy", "sega", "playstation", "nintendo", "gta", "call of duty", "dota", "joypad"],
        "paid-notepad": ["notepad", "note", "notes"],
        "paid-paint": ["repairs", "paint", "diy", "fixer"],
        "paid2-car": ["car", "automobile", "vehicle"],
        "paid2-tent": ["trekking", "camping", "campfire", "bagpack", "nature","old boys","oldboys"],
        "panda": ["panda"],
        "parrot": ["parrot", "bird"],
        "piano": ["piano", "symphony", "mozart", "beethoven", "tchaikovsky", "pianist", "classic"],
        "piggy-bank": ["money", "collect", "piggy-bank", "pig", "piggy"],
        "poop": ["poop", "shit", "crap"],
        "plant": ["plant", "seed"],
        "rafting": ["rafting", "kayak", "paddle"],
        "ramadan": ["ramadan", "muslim"],
        "route": ["route", "way", "road", "path"],
        "sale": ["sale", "discount", "buy", "rebate","black friday","blackfriday","cyber monday","cybermonday"],
        "school-backpack": ["bagpack", "school", "satchel", "haversack", "knapsack"],
        "shinto": ["shinto"],
        "ship": ["cruise", "ship", "titanic", "ferry", "ferryboat"],
        "paid-sun": ["sun", "summer", "happy", "weather", "clear"],
        "shop": ["shop", "kiosk", "facade", "shop-window", "showcase"],
        "shopping2": ["shopping", "goods", "clothes", "shoes"],

        "ski": ["ski"],
        "paid-snow": ["snow", "alpine"],
        "paid2-snowman": ["snowman", "winter", "january", "february", "december"],
        "strong-heart": ["heart", "health", "pulse", "cardio"],
        "tooth": ["dentist", "tooth", "teeth"],
        "train": ["carriage", "subway", "train", "underground", "tram", "transport"],
        "wedding": ["wedding", "marriage"],
        "paid-wine-glass": ["wine", "vino", "alcohol", "bar"],
        "paid-tie": ["deal", "agreement", "client", "customer", "meeting", "invest", "tie", "necktie"],
        "paid-cocktail": ["party", "alcohol", "drink", "bachelor", "bar"],
        "paid-coffee": ["coffee", "espresso", "cappuchino", "americano", "latte"],
        "paid2-hotspot": ["wifi", "wi-fi", "hotspot", "network"],
        "chair": ["office", "chair", "work", "job"],
        "paid-baby": ["child", "kinder", "baby", "birth"],
        "paid-baseball": ["baseball", "ball"],
        "paid-basketball": ["basketball", "ball"],
        "paid-banana": ["banana", "fruit"],
        "paid-christmas": ["christmas", "new year", "celebration"],
        "paid-birthday": ["birth", "birthday", "anniversar", "celebrat"],
        "paid-diskette": ["download", "software", "app"],
        "paid-flower": ["flower","garden", "nature", "floret"],
        "paid-map": ["visit", "place", "location", "geo"],
        "paid-music": ["music", "song", "itunes", "rock", "rap", "techno"],
        "paid-icecream": ["icecream"],
        "paid-microphone": ["microphone", "record", "song", "sing"],
        "paid-notepad": ["note", "memo", "remember"],
        "paid-pizza": ["pizza","eat"],
        "paid-safebox": ["save", "safe", "safebox", "deposit", "saving", "lock", "secret"],
        "paid-rain": ["rain", "autumn", "cloud", "downpour", "weather"],
        "paid-trash": ["trash", "recycle", "garbage", "shit", "etc", "delete", "crap", "bin", "rubbish", "refuse", "junk"],
        "paid-tv": ["tv","television"],
        "paid-starbucks": ["coff", "facebook", "twitter", "hipster"],
        "paid-piggy": ["save", "collect", "keep"],
        "paid-umbrella": ["umbrella", "backup", "weather"],
        "paid2-arrows": ["change", "switch", "replace", "recycle", "cycle"],
        "paid2-boxes": ["shipment", "packag", "stock", "warehous", "boxes"],
        "paid2-crab": ["putin", "seafood"],
        "paid2-camera": ["camera", "photo", "lens", "canon", "nikon"],
        "paid2-iphone": ["phone", "iphone", "smartphone"],
        "paid2-location": ["location", "visit", "geo"],
        "paid2-keys": ["key", "login"],
        "paid2-sunglasses": ["sunglass", "glasses", "eyeglasses"],
        "paid2-tent": ["tent", "camping", "campfire", "backpack", "outdoor", "adventur"],
        "paid3-goal": ["goals", "achieve", "target"],
        "paid3-bookmark": ["bookmark", "read"],
        "paid3-apple": ["apple", "mac", "computer", "upgrad"],
        "hotdog": ["dinner", "breakfast", "lunch", "fastfood", "food", "eat"],
        "domain-registration": ["www","internet","site"],

        "people": ["contacts","users","guest"],

        "pl201811-preza": ["work","presentation","powerpoint","keynote"],
        "pl201811-docs": ["documents","inbox"],
        "pl201811-online": ["ecommerce","aliexpress","ali express","buy online","online"],
        "pl201811-free": ["free","discount","promo"],
        "pl201811-theatre": ["theatre"],
        "pl201811-bed": ["bedroom","sleep","furniture"],
        "pl201811-sofa": ["sofa","bedroom","sleep","furniture"],
        "pl201811-atom": ["physics","atom","molecul"],
        "pl201811-bird": ["bird","twitter"],
        "pl201811-bot": ["robot","automat"],
        "pl201811-camera": ["video"],
        "pl201811-cemetery": ["cemetery","grave"],
        "pl201811-cmyk": ["cmyk","rgb","color","print"],
        "pl201811-rgb": ["cmyk","rgb","color","print"],
        "pl201811-crypto": ["bitcoin","crypto","money"],
        "pl201811-navigator": ["navigator","roadtrip","road trip","travel"],
        "pl201811-parking": ["parking"],
        "pl201811-pills": ["pill","heal"],
        "pl201811-pool": ["swim","pool"],
        "pl201811-speaker": ["audio","sound"],
        "pl201811-treadmill": ["fitness"],
        "pl201811-toolkit": ["construction","tools","toolkit"],
        "pl201811-protein": ["nutrition","healthy"],
        "pl201811-herbal": ["nutrition","healthy"],
        "pl201811-school": ["school","university","college"],

        "pl201812-candle": ["new year", "christmas", "winter","candle"],
        "pl201812-cupcake": ["new year", "christmas", "winter","cake"],
        "pl201812-earbuds": ["winter","earbud"],
        "pl201812-giftcard": ["new year", "christmas", "winter"],
        "pl201812-glove": ["winter","clothes","glove", "winter"],
        "pl201812-hat": ["winter","clothes","hat", "winter"],
        "pl201812-jacket": ["winter","clothes","jacket", "winter"],
        "pl201812-ornament": ["new year", "christmas", "winter","ornament","decoration"],
        "pl201812-risingstar": ["new year", "christmas", "winter","star"],
        "pl201812-skilift": ["ski","snowboard","skilift","shred", "winter"],
        "pl201812-snowboard": ["ski","snowboard","skilift","shred", "winter"],
        "pl201812-snowwindow": ["winter","snow","powder days","powderdays", "winter","window"],
        "pl201812-snowcloud": ["winter","snow","powder days","powderdays", "winter"],
        "pl201812-snowmountains": ["mountain", "winter"],
        "pl201812-snowshovel": ["shovel","clean"],
        "pl201812-snowskates": ["skating", "skates", "figure skates", "figure skating", "winter"],
        "pl201812-snowvillage": ["village", "winter", "winter"],
        "pl201812-snowglobe": ["new year", "christmas", "winter"],

        "pl201813-1312": ["1312"],
        "pl201813-pocketlists": ["pocketlists","pocket lists","pocket list","pocketlist"],
        "pl201813-shopscript": ["shop-script","shopscript","shop script"],
        "pl201813-webasyst": ["webasyst"],

        "paid3-anchor": ["anchor"]


    }
}
