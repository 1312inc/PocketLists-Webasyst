# validate https://editor.swagger.io/
openapi: 3.0.0
info:
  title: 'Pocket Lists API'
  description: ''
  version: 1.0.0
servers:
  - url: /api.php
    description: Current host server

paths:
  /pocketlists.attachments.add:
    put:
      security:
        - BearerAuth: [ ]
      summary: Uploads file attachments to an item.
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                required:
                  - item_id
                  - file
                  - file_name
                type: object
                properties:
                  item_id:
                    type: integer
                    description: Item ID
                  file:
                    type: string
                    format: byte
                    description: File binary content
                  file_name:
                    type: string
                    description: File name (visible to user)
                  uuid:
                    type: string
                    nullable: true
                    description: Unique UUID value generated by client for precise entity identification. 128-bit label format (8-4-4-4-12 string is recommended). Max 36 characters. Optional but highly recommended.
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        500:
          description: Internal server error
  /pocketlists.attachments.delete:
    delete:
      security:
        - BearerAuth: [ ]
      summary: Deletes file attachments.
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                required:
                  - id
                  - item_id
                properties:
                  id:
                    type: integer
                    description: Attachment ID
                  item_id:
                    type: integer
                    description: Item ID
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        403:
          description: Access denied to the Pocket Lists app or this API method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        500:
          description: Internal server error
  /pocketlists.comments.add:
    put:
      security:
        - BearerAuth: [ ]
      summary: Adds new comments to an item.
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                required:
                  - item_id
                properties:
                  item_id:
                    type: integer
                    description: Item ID
                  comment:
                    type: string
                    description: Comment text
                  client_touch_datetime:
                    type: string
                    format: date-time
                    nullable: true
                    description: A descriptive datetime to be shown somewhere in the client UI, and not validated by server
                  uuid:
                    type: string
                    nullable: true
                    description: Unique UUID value generated by client for precise entity identification. 128-bit label format (8-4-4-4-12 string is recommended). Max 36 characters. Optional but highly recommended.
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        403:
          description: Access denied to the Pocket Lists app or this API method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        404:
          description: Pocket not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        500:
          description: Internal server error
  /pocketlists.comments.delete:
    delete:
      security:
        - BearerAuth: [ ]
      summary: Deletes comments.
      parameters:
        - in: query
          name: id[]
          description: Comment IDs
          required: true
          schema:
            type: array
            items:
              type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        500:
          description: Internal server error
  /pocketlists.comments.get:
    get:
      security:
        - BearerAuth: [ ]
      summary: Returns comments.
      parameters:
        - in: query
          name: item_id
          description: Item ID
          schema:
            type: integer
        - in: query
          name: starting_from
          description: Returns records updated/created only after the specified datetime (UTC, ISO 8601). Older records are removed from the response. When 'starting_from' is passed, all records will be 'ORDER BY update_datetime DESC'.
          schema:
            type: string
            format: date-time
        - in: query
          name: offset
          description: Skips first 'offset' records before starting the response. 0 by default.
          schema:
            type: integer
        - in: query
          name: limit
          description: Limits the max number of records returned in the response. 30 by default. 500 max allowed.
          schema:
            type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        500:
          description: Internal server error
  /pocketlists.comments.update:
    patch:
      security:
        - BearerAuth: [ ]
      summary: Updates comments.
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                required:
                  - id
                  - comment
                properties:
                  action:
                    type: string
                    default: patch
                    description: Updates (PUT) or patches (PATCH) data with the new data from the request
                    enum:
                      - patch
                      - update
                  id:
                    type: integer
                    description: Comment ID
                  comment:
                    type: string
                    description: Comment text
                  client_touch_datetime:
                    type: string
                    format: date-time
                    nullable: true
                    description: A descriptive datetime to be shown somewhere in the client UI, and not validated by server
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        500:
          description: Internal server error
  /pocketlists.items.add:
    put:
      security:
        - BearerAuth: [ ]
      summary: Adds new items.
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  list_id:
                    type: integer
                    description: List ID
                  name:
                    type: string
                    description: Item name
                  note:
                    type: string
                    description: Item text note
                  sort:
                    type: integer
                    description: Precise master sort position (ORDER BY sort, rank) within a list
                  rank:
                    type: string
                    maxLength: 8
                    description: Precise sort subrank position among elements with the same master sort value (ORDER BY sort, rank)
                  status:
                    type: integer
                    description: Item status (0 for active/undone, 1 for completed/done)
                    enum:
                      - 0
                      - 1
                  assigned_contact_id:
                    type: integer
                    nullable: true
                    description: Assigned/responsible user contact ID
                  priority:
                    type: integer
                    description: Priority (0, 1, 2, ..., N)
                  location_id:
                    type: integer
                    description: Location ID
                  due_date:
                    type: string
                    format: date
                    nullable: true
                    description: Item due date (for all-day items)
                  due_datetime:
                    type: string
                    format: date-time
                    nullable: true
                    description: Item exact due datetime (UTC). When specified, server automatically fills due_date field making the 'due_date' optional for the request.
                  client_touch_datetime:
                    type: string
                    format: date-time
                    nullable: true
                    description: A descriptive datetime to be shown somewhere in the client UI, and not validated by server
                  uuid:
                    type: string
                    nullable: true
                    description: Unique UUID value generated by client for precise entity identification. 128-bit label format (8-4-4-4-12 string is recommended). Max 36 characters. Optional but highly recommended.
                  prev_item_id:
                    type: integer
                    nullable: true
                    description: Use only when NOT providing 'sort' & 'rank' values precisely! Server will automatically generate new sort & rank values putting the element in the list right after the specified previous element.
                  prev_item_uuid:
                    type: string
                    nullable: true
                    description: Use only when NOT providing 'sort', 'rank', and 'prev_item_id' values precisely! Server will automatically generate new sort & rank values putting the element in the list right after the specified previous element.
                  tags:
                    type: array
                    description: Item tags
                    items:
                      type: string
                      description: Tag name
                  attachments:
                    type: array
                    description: Files
                    items:
                      required:
                        - file
                        - file_name
                      type: object
                      properties:
                        file:
                          type: string
                          format: byte
                          description: File binary content
                        file_name:
                          type: string
                          description: File name (visible to user)
                        uuid:
                          type: string
                          nullable: true
                          description: Unique UUID value generated by client for precise entity identification. 128-bit label format (8-4-4-4-12 string is recommended). Max 36 characters. Optional but highly recommended.
                  external_links:
                    type: array
                    description: Item links to external app entities
                    items:
                      required:
                        - app_id
                        - entity_type
                        - entity_id
                      type: object
                      properties:
                        app_id:
                          type: string
                          description: App identifier, e.g. 'shop' or 'My Custom External App or Domain'
                        entity_type:
                          type: string
                          description: Entity type, e.g. 'order' or 'product'
                        entity_id:
                          type: string
                          description: Entity identifier, 36 characters max
                        entity_data:
                          type: string
                          description: Any entity custom data, e.g. JSON-encoded useful information
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        404:
          description: Pocket not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        500:
          description: Internal server error
  /pocketlists.items.delete:
    delete:
      security:
        - BearerAuth: [ ]
      summary: Deletes items.
      parameters:
        - in: query
          name: id[]
          description: Item ID
          required: true
          schema:
            type: array
            items:
              type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        500:
          description: Internal server error
  /pocketlists.items.get:
    get:
      security:
        - BearerAuth: [ ]
      summary: Returns items.
      parameters:
        - in: query
          name: id[]
          description: Filters by item ID.
          schema:
            type: array
            items:
              type: integer
        - in: query
          name: list_id
          description: Filters by list ID.
          schema:
            type: integer
        - in: query
          name: contact_id
          description: Filters by contact ID
          schema:
            type: integer
        - in: query
          name: assigned_contact_id
          description: Filters by assigned contact ID
          schema:
            type: integer
        - in: query
          name: location_id
          description: Filters by location ID.
          schema:
            type: integer
        - in: query
          name: status
          description: Filters by item status (0 for active/undone, 1 for completed/done). When 'status=1' is passed, defult sort will be 'ORDER BY complete_datetime DESC'.
          schema:
            type: integer
        - in: query
          name: tag
          description: Filters by tag.
          schema:
            type: string
        - in: query
          name: external_app_id
          description: Filters by external app link.
          schema:
            type: string
        - in: query
          name: external_entity_type
          description: Filters by external app link & entity type. 'external_app_id' must be provided.
          schema:
            type: string
        - in: query
          name: external_entity_id
          description: Filters by external app link, entity type & identifier. 'external_app_id' & 'external_entity_type' must be provided.
          schema:
            type: string
        - in: query
          name: starting_from
          description: Returns records updated/created only after the specified datetime (UTC, ISO 8601). Older records are removed from the response. When 'starting_from' is passed, all records will be 'ORDER BY update_datetime DESC'.
          schema:
            type: string
            format: date-time
        - in: query
          name: offset
          description: Skips first 'offset' records before starting the response. 0 by default.
          schema:
            type: integer
        - in: query
          name: limit
          description: Limits the max number of records returned in the response. 30 by default. 500 max allowed.
          schema:
            type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        403:
          description: Access denied to the Pocket Lists app or this API method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        500:
          description: Internal server error
  /pocketlists.items.getStream:
    get:
      security:
        - BearerAuth: [ ]
      summary: Returns items according to a sophisticated search criteria, e.g. mixed due/priority search & sort.
      parameters:
        - in: query
          name: filter
          required: true
          description: |
            Filter defines the search criteria and sort accordingly:
            + **upnext**: items with due date/time or manually defined priority ordered by mixed dynamicly calculated priority,
            + **due**: items with non-empty due date/time,
            + **priority**: items with manually defined priority,
            + **favorites**: items in favorites,
            + **user/55**: items assigned to a specific responsible user,
            + **tag/TAG**: items assigned to a specific tag,
            + **search/KEYWORD**: full-text search within item text data,
            + **nearby**: items assigned to locations,
            + **nearby/43.679149,-40.202120**: items assigned to locations ordered by proximity from the specified lattitude and longitude
          example: upnext, user/ID, search/KEYWORD
          schema:
            type: string
        - in: query
          name: starting_from
          description: Returns records updated/created only after the specified datetime (UTC, ISO 8601). Older records are removed from the response. When 'starting_from' is passed, all records will be 'ORDER BY update_datetime DESC'.
          schema:
            type: string
            format: date-time
        - in: query
          name: status
          description: Filters by item status (0 for active/undone, 1 for completed/done). When 'status=1' is passed, defult sort will be 'ORDER BY complete_datetime DESC'.
          schema:
            type: integer
        - in: query
          name: offset
          description: Skips first 'offset' records before starting the response. 0 by default.
          schema:
            type: integer
        - in: query
          name: limit
          description: Limits the max number of records returned in the response. 30 by default. 500 max allowed.
          schema:
            type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/response'
                  - type: object
                    properties:
                      filter:
                        type: string
                        description: Filter value
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        500:
          description: Internal server error
  /pocketlists.items.update:
    patch:
      security:
        - BearerAuth: [ ]
      summary: Updates items.
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                required:
                  - id
                properties:
                  action:
                    type: string
                    default: patch
                    description: Updates (PUT) or patches (PATCH) data with the new data from the request
                    enum:
                      - patch
                      - update
                  id:
                    type: integer
                    description: Item ID
                  list_id:
                    type: integer
                    description: List ID
                  name:
                    type: string
                    description: Item name
                  note:
                    type: string
                    description: Item text note
                  sort:
                    type: integer
                    description: Precise master sort position (ORDER BY sort, rank) within a list
                  rank:
                    type: string
                    maxLength: 8
                    description: Precise sort subrank position among elements with the same master sort value (ORDER BY sort, rank)
                  status:
                    type: integer
                    description: Item status (0 for active/undone, 1 for completed/done)
                    enum:
                      - 0
                      - 1
                  assigned_contact_id:
                    type: integer
                    description: Assigned/responsible user contact ID
                  priority:
                    type: integer
                    description: Priority (0, 1, 2, ..., N)
                  location_id:
                    type: integer
                    description: Location ID
                  due_date:
                    type: string
                    format: date
                    nullable: true
                    description: Item due date (for all-day items)
                  due_datetime:
                    type: string
                    format: date-time
                    nullable: true
                    description: Item exact due datetime (UTC). When specified, server automatically fills due_date field making the 'due_date' optional for the request.
                  client_touch_datetime:
                    type: string
                    format: date-time
                    nullable: true
                    description: A descriptive datetime to be shown somewhere in the client UI, and not validated by server
                  prev_item_id:
                    type: integer
                    nullable: true
                    description: Use only when NOT providing 'sort' & 'rank' values precisely! Server will automatically generate new sort & rank values putting the element in the list right after the specified previous element.
                  tags:
                    type: array
                    description: Item tags. If 'tags' is specified in the request, they are saved immutably - flushing previously assigned tags, overriding with the new set specified in the 'tags'.
                    items:
                      type: string
                      description: Tag name
                  attachments:
                    type: array
                    description: Files
                    items:
                      required:
                        - file
                        - file_name
                      type: object
                      properties:
                        file:
                          type: string
                          format: byte
                          description: File binary content
                        file_name:
                          type: string
                          description: File name (visible to user)
                        uuid:
                          type: string
                          nullable: true
                          description: Unique UUID value generated by client for precise entity identification. 128-bit label format (8-4-4-4-12 string is recommended). Max 36 characters. Optional but highly recommended.
                  external_links:
                    type: array
                    description: Item links to external app entities. If 'external_links' is specified in the request, they are saved immutably - flushing previously saved linkd, overriding with the new set specified in the 'external_links'.
                    items:
                      required:
                        - app_id
                        - entity_type
                        - entity_id
                      type: object
                      properties:
                        app_id:
                          type: string
                          description: App identifier, e.g. 'shop' or 'My Custom External App or Domain'
                        entity_type:
                          type: string
                          description: Entity type, e.g. 'order' or 'product'
                        entity_id:
                          type: string
                          description: Entity identifier, 36 characters max
                        entity_data:
                          type: string
                          description: Any entity custom data, e.g. JSON-encoded useful information
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        403:
          description: Access denied to the Pocket Lists app or this API method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        500:
          description: Internal server error
  /pocketlists.lists.add:
    put:
      security:
        - BearerAuth: [ ]
      summary: Adds new lists.
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  pocket_id:
                    type: integer
                    description: Pocket ID
                  name:
                    type: string
                    description: List name
                  icon:
                    type: string
                    description: List icon
                  color:
                    type: string
                    description: List color
                    default: none
                    enum:
                      - none
                      - red
                      - green
                      - blue
                      - yellow
                      - purple
                  assigned_contact_id:
                    type: integer
                    description: Assigned contact ID
                  client_touch_datetime:
                    type: string
                    format: date-time
                    nullable: true
                    description: A descriptive datetime to be shown somewhere in the client UI, and not validated by server
                  sort:
                    type: integer
                    description: Precise master sort position (ORDER BY sort, rank) within a pocket
                  rank:
                    type: string
                    description: Precise sort subrank position among elements with the same master sort value (ORDER BY sort, rank)
                  type:
                    type: string
                    default: checklist
                    description: |
                      Тип списка
                      + checklist - перечень дел
                      + notes - заметки
                    enum:
                      - checklist
                      - notes
                  uuid:
                    type: string
                    nullable: true
                    description: Unique UUID value generated by client for precise entity identification. 128-bit label format (8-4-4-4-12 string is recommended). Max 36 characters. Optional but highly recommended.
                  prev_list_id:
                    type: integer
                    nullable: true
                    description: Use only when NOT providing 'sort' & 'rank' values precisely! Server will automatically generate new sort & rank values putting the element in the list right after the specified previous element.
                  prev_list_uuid:
                    type: string
                    nullable: true
                    description: Use only when NOT providing 'sort', 'rank', and 'prev_list_id' values precisely! Server will automatically generate new sort & rank values putting the element in the list right after the specified previous element.
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        403:
          description: Access denied to the Pocket Lists app or this API method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        404:
          description: Pocket not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        500:
          description: Internal server error
  /pocketlists.lists.delete:
    delete:
      security:
        - BearerAuth: [ ]
      summary: Deletes lists.
      parameters:
        - in: query
          name: id[]
          description: List ID
          required: true
          schema:
            type: array
            items:
              type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        500:
          description: Internal server error
  /pocketlists.lists.get:
    get:
      security:
        - BearerAuth: [ ]
      summary: Returns lists.
      parameters:
        - in: query
          name: id[]
          description: List ID
          schema:
            type: array
            items:
              type: integer
        - in: query
          name: pocket_id
          description: Filter by pocket ID
          schema:
            type: integer
        - in: query
          name: assigned_contact_id
          description: Filter by assigned contact ID
          schema:
            type: integer
        - in: query
          name: starting_from
          description: Returns records updated/created only after the specified datetime (UTC, ISO 8601). Older records are removed from the response. When 'starting_from' is passed, all records will be 'ORDER BY update_datetime DESC'.
          schema:
            type: string
            format: date-time
        - in: query
          name: offset
          description: Skips first 'offset' records before starting the response. 0 by default.
          schema:
            type: integer
        - in: query
          name: limit
          description: Limits the max number of records returned in the response. 30 by default. 500 max allowed.
          schema:
            type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        403:
          description: Access denied to the Pocket Lists app or this API method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        500:
          description: Internal server error
  /pocketlists.lists.update:
    patch:
      security:
        - BearerAuth: [ ]
      summary: Updates lists.
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                required:
                  - id
                properties:
                  action:
                    type: string
                    default: patch
                    description: Updates (PUT) or patches (PATCH) data with the new data from the request
                    enum:
                      - patch
                      - update
                  id:
                    type: integer
                    description: List ID
                  pocket_id:
                    type: integer
                    description: Pocket ID
                  name:
                    type: string
                    description: List name
                  icon:
                    type: string
                    description: List icon
                  color:
                    type: string
                    description: List color
                    default: none
                    enum:
                      - none
                      - red
                      - green
                      - blue
                      - yellow
                      - purple
                  assigned_contact_id:
                    type: integer
                    description: Assigned contact ID
                  client_touch_datetime:
                    type: string
                    format: date-time
                    nullable: true
                    description: A descriptive datetime to be shown somewhere in the client UI, and not validated by server
                  sort:
                    type: integer
                    description: Precise master sort position (ORDER BY sort, rank) within a pocket
                  rank:
                    type: string
                    description: Precise sort subrank position among elements with the same master sort value (ORDER BY sort, rank)
                  prev_list_id:
                    type: integer
                    nullable: true
                    description: Use only when NOT providing 'sort' & 'rank' values precisely! Server will automatically generate new sort & rank values putting the element in the list right after the specified previous element.
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        500:
          description: Internal server error
  /pocketlists.locations.add:
    put:
      security:
        - BearerAuth: [ ]
      summary: Adds new locations.
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                    description: Location name
                  color:
                    type: string
                    description: Location color
                  location_latitude:
                    type: number
                    description: Location lattitude
                  location_longitude:
                    type: number
                    description: Location longitude
                  location_radius:
                    type: integer
                    description: Location area radius (in meters)
                  uuid:
                    type: string
                    description: Unique UUID value generated by client for precise entity identification. 128-bit label format (8-4-4-4-12 string is recommended). Max 36 characters. Optional but highly recommended.
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        404:
          description: Pocket not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        500:
          description: Internal server error
  /pocketlists.locations.delete:
    delete:
      security:
        - BearerAuth: [ ]
      summary: Deletes locations.
      parameters:
        - in: query
          name: id[]
          description: Location ID
          required: true
          schema:
            type: array
            items:
              type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        500:
          description: Internal server error
  /pocketlists.locations.get:
    get:
      security:
        - BearerAuth: [ ]
      summary: Returns locations.
      parameters:
        - in: query
          name: location_id
          description: Location ID
          schema:
            type: integer
        - in: query
          name: starting_from
          description: Returns records updated/created only after the specified datetime (UTC, ISO 8601). Older records are removed from the response. When 'starting_from' is passed, all records will be 'ORDER BY update_datetime DESC'.
          schema:
            type: string
            format: date-time
        - in: query
          name: nearby
          description: Orders locations by proximity from the specified lattitude and longitude.
          example: 43.679149,-40.202120
          schema:
            type: string
        - in: query
          name: offset
          description: Skips first 'offset' records before starting the response. 0 by default.
          schema:
            type: integer
        - in: query
          name: limit
          description: Limits the max number of records returned in the response. 30 by default. 500 max allowed.
          schema:
            type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        500:
          description: Internal server error
  /pocketlists.locations.update:
    patch:
      security:
        - BearerAuth: [ ]
      summary: Updates locations.
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                required:
                  - id
                properties:
                  action:
                    type: string
                    default: patch
                    description: Updates (PUT) or patches (PATCH) data with the new data from the request
                    enum:
                      - patch
                      - update
                  id:
                    type: integer
                    description: Location ID
                  name:
                    type: string
                    description: Location name
                  color:
                    type: string
                    description: Location color
                  location_latitude:
                    type: number
                    description: Location lattitude
                  location_longitude:
                    type: number
                    description: Location longitude
                  location_radius:
                    type: integer
                    description: Location area radius (in meters)
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        500:
          description: Internal server error
  /pocketlists.log.get:
    get:
      security:
        - BearerAuth: [ ]
      summary: Returns the full log of all actions performed with the data the user has access to.
      parameters:
        - in: query
          name: starting_from
          description: Returns records updated/created only after the specified datetime (UTC, ISO 8601). Older records are removed from the response.
          schema:
            type: string
            format: date-time
        - in: query
          name: entity_type
          description: Filters by entity type.
          schema:
            type: string
            nullable: true
            default: null
            enum:
              - pocket
              - list
              - item
              - comment
              - attachment
              - location
        - in: query
          name: entity_id
          description: Filters by entity ID.
          schema:
            type: integer
        - in: query
          name: contact_id
          description: Filters by contact ID.
          schema:
            type: integer
        - in: query
          name: offset
          description: Skips first 'offset' records before starting the response. 0 by default.
          schema:
            type: integer
        - in: query
          name: limit
          description: Limits the max number of records returned in the response. 30 by default. 500 max allowed.
          schema:
            type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        500:
          description: Internal server error
  /pocketlists.log.getDeleted:
    get:
      security:
        - BearerAuth: [ ]
      summary: Returns the full log of permanent delete actions (deleted records) since the specified datetime.
      parameters:
        - in: query
          name: starting_from
          description: Returns records updated/created only after the specified datetime (UTC, ISO 8601). Older records are removed from the response.
          schema:
            type: string
            format: date-time
        - in: query
          name: offset
          description: Skips first 'offset' records before starting the response. 0 by default.
          schema:
            type: integer
        - in: query
          name: limit
          description: Limits the max number of records returned in the response. 30 by default. 500 max allowed.
          schema:
            type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        500:
          description: Internal server error
  /pocketlists.log.getDeletedSummary:
    get:
      security:
        - BearerAuth: [ ]
      summary: Returns summary on the number of records by entity type that were permanently deleted ('delete' action) since the specified datetime. Useful for quickly getting to know if anything was deleted at all.
      parameters:
        - in: query
          name: starting_from
          required: true
          description: Reads log records only after the specified datetime (UTC, ISO 8601). Older records are removed from the response.
          schema:
            type: string
            format: date-time
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/response'
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          starting_from:
                            type: string
                            format: date-time
                            description: Confirms the starting time for the log summary fetch accroding to the request (UTC, ISO 8601).
                          ending_to:
                            type: string
                            format: date-time
                            description: Confirms the ending time for the log summary fetch. Current server time eventually (UTC, ISO 8601).
                          pockets:
                            type: integer
                            description: ''
                          lists:
                            type: integer
                            description: ''
                          items:
                            type: integer
                            description: ''
                          comments:
                            type: integer
                            description: ''
                          attachments:
                            type: integer
                            description: ''
                          location:
                            type: integer
                            description: ''
                          user:
                            type: integer
                            description: ''
  /pocketlists.log.getSummary:
    get:
      security:
        - BearerAuth: [ ]
      summary: Returns summary on the number of records by entity type that were touched/updated since the specified datetime. Useful for quickly getting to know if anything was updated at all.
      parameters:
        - in: query
          name: starting_from
          required: true
          description: Reads log records only after the specified datetime (UTC, ISO 8601). Older records are removed from the response.
          schema:
            type: string
            format: date-time

      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/response'
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          starting_from:
                            type: string
                            format: date-time
                            description: Confirms the starting time for the log summary fetch accroding to the request (UTC, ISO 8601).
                          ending_to:
                            type: string
                            format: date-time
                            description: Confirms the ending time for the log summary fetch. Current server time eventually (UTC, ISO 8601).
                          pockets:
                            type: integer
                            description: ''
                          lists:
                            type: integer
                            description: ''
                          items:
                            type: integer
                            description: ''
                          comments:
                            type: integer
                            description: ''
                          attachments:
                            type: integer
                            description: ''
                          location:
                            type: integer
                            description: ''
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        500:
          description: Internal server error
  /pocketlists.pockets.add:
    put:
      security:
        - BearerAuth: [ ]
      summary: Adds new pocket - a container for lists with custom access rights setup (a sort of a folder or a project).
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                    nullable: true
                    description: Pocket name
                  color:
                    type: string
                    nullable: true
                    description: Pocket sash color for custom looks in the UI
                    enum:
                      - none
                      - red
                      - green
                      - blue
                      - yellow
                      - purple
                  sort:
                    type: integer
                    description: Precise master sort position (ORDER BY sort, rank)
                  rank:
                    type: string
                    description: Precise sort subrank position among elements with the same master sort value (ORDER BY sort, rank)
                  client_touch_datetime:
                    type: string
                    format: date-time
                    nullable: true
                    description: A descriptive datetime to be shown somewhere in the client UI, and not validated by server
                  uuid:
                    type: string
                    description: Unique UUID value generated by client for precise entity identification. 128-bit label format (8-4-4-4-12 string is recommended). Max 36 characters. Optional but highly recommended.
                  prev_pocket_id:
                    type: integer
                    nullable: true
                    description: Use only when NOT providing 'sort' & 'rank' values precisely! Server will automatically generate new sort & rank values putting the element in the list right after the specified previous element.
                  prev_pocket_uuid:
                    type: string
                    nullable: true
                    description: Use only when NOT providing 'sort', 'rank', and 'prev_pocket_id' values precisely! Server will automatically generate new sort & rank values putting the element in the list right after the specified previous element.
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        500:
          description: Internal server error
  /pocketlists.pockets.delete:
    delete:
      security:
        - BearerAuth: [ ]
      summary: Deletes pockets.
      parameters:
        - in: query
          name: id[]
          description: Pocket IDs
          required: true
          schema:
            type: array
            items:
              type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        400:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        500:
          description: Internal server error
  /pocketlists.pockets.get:
    get:
      security:
        - BearerAuth: [ ]
      summary: Returns pockets.
      parameters:
        - in: query
          name: id[]
          description: Pocket IDs
          schema:
            type: array
            items:
              type: integer
        - in: query
          name: starting_from
          description: Returns records updated/created only after the specified datetime (UTC, ISO 8601). Older records are removed from the response. When 'starting_from' is passed, all records will be 'ORDER BY update_datetime DESC'.
          schema:
            type: string
            format: date-time
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
  /pocketlists.pockets.update:
    patch:
      security:
        - BearerAuth: [ ]
      summary: Updates pockets.
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                required:
                  - id
                properties:
                  action:
                    type: string
                    default: patch
                    description: Updates (PUT) or patches (PATCH) data with the new data from the request
                    enum:
                      - patch
                      - update
                  id:
                    type: integer
                    description: Pocket ID
                  name:
                    type: string
                    description: Pocket name
                  color:
                    type: string
                    nullable: true
                    description: Pocket color
                    enum:
                      - none
                      - red
                      - green
                      - blue
                      - yellow
                      - purple
                  sort:
                    type: integer
                    description: Precise master sort position (ORDER BY sort, rank)
                  rank:
                    type: string
                    description: Precise sort subrank position among elements with the same master sort value (ORDER BY sort, rank)
                  client_touch_datetime:
                    type: string
                    format: date-time
                    nullable: true
                    description: A descriptive datetime to be shown somewhere in the client UI, and not validated by server
                  prev_pocket_id:
                    type: integer
                    nullable: true
                    description: Use only when NOT providing 'sort' & 'rank' values precisely! Server will automatically generate new sort & rank values putting the element in the list right after the specified previous element.
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        500:
          description: Internal server error
  /pocketlists.system.getSettings:
    get:
      security:
        - BearerAuth: [ ]
      summary: Returns core Webasyst and Pocket Lists app environment settings.
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/response'
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          base_url:
                            type: string
                            format: uri
                            description: Backend web UI URL
                          user_rights:
                            type: object
                            properties:
                              backend:
                                type: string
                                description: Backend access
                                enum:
                                  - LIMITED
                                  - FULL
                              cancreatetodos:
                                type: integer
                                nullable: true
                                description: Can create to-dos to self
                              canassign:
                                type: integer
                                nullable: true
                                description: Can see other users personal to-dos and assign to-dos to teammates
                              canuseshopscript:
                                type: integer
                                nullable: true
                                description: Can create and see to-dos linked with Shop-Script orders
                              pockets:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    pocket_id:
                                      type: integer
                                      description: Pocket ID
                                    right:
                                      type: string
                                      enum:
                                        - LIMITED
                                        - FULL
                              lists:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    list_id:
                                      type: integer
                                      description: List ID
                                    right:
                                      type: string
                                      enum:
                                        - FULL
                          user_locale:
                            type: string
                            description: User locale
                          user_timezone:
                            type: string
                            default: 'auto'
                            description: Timezone specified in the user custom profile settings
                          labels:
                            type: array
                            description: Labels, only premium license
                            items:
                              type: object
                              properties:
                                id:
                                  type: integer
                                name:
                                  type: string
                                color:
                                  type: string
                                sort:
                                  type: integer
                          shortcuts:
                            type: array
                            description: Shortcuts, only premium license
                            items:
                              type: object
                              properties:
                                id:
                                  type: integer
                                name:
                                  type: string
                                group:
                                  type: integer
                          timestamp:
                            type: integer
                            description: UNIX timestamp right now
                          datetime:
                            type: string
                            format: date-time
                            description: UTC datetime right now (ISO 8601)
                          framework_version:
                            type: string
                            description: Webasyst framework version
                          app_version:
                            type: string
                            description: Pocket Lists app version
                          is_premium:
                            type: boolean
                            description: Pocket Lists premium version status
                          is_debug_mode:
                            type: boolean
                            description: Webasyst debug mode status
  /pocketlists.system.getWebsocketUrl:
    get:
      security:
        - BearerAuth: [ ]
      summary: Returns Web Socket connection URL streaming all server Pocket Lists log updates.
      parameters:
        - in: query
          name: channel
          description: Channel ID (optional)
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/response'
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          url:
                            type: string
                            format: uri
                            description: URL websocket
                          channel:
                            type: string
                            nullable: true
                            description: Channel identifier
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        500:
          description: Internal server error
  /pocketlists.users.get:
    get:
      security:
        - BearerAuth: [ ]
      summary: Returns all users (team).
      parameters:
        - in: query
          name: offset
          description: Skips first 'offset' records before starting the response. 0 by default.
          schema:
            type: integer
        - in: query
          name: limit
          description: Limits the max number of records returned in the response. 30 by default. 500 max allowed.
          schema:
            type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        500:
          description: Internal server error

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
  schemas:
    attachment:
      type: object
      properties:
        id:
          type: integer
        item_id:
          type: integer
        file_name:
          type: string
        ext:
          type: string
          description: File extension
        size:
          type: integer
          nullable: true
          description: File size (bytes)
        upload_datetime:
          type: string
          format: datetime
          description: Server-generated attachment upload datetime (UTC)
        download_url:
          type: string
          format: uri
          description: File URL
        preview_url:
          type: string
          format: uri
          description: Preview URL
        uuid:
          type: string
          nullable: true
          description: UUID value
    pocket:
      allOf:
        - type: object
          properties:
            id:
              type: integer
              description: Pocket ID
            sort:
              type: integer
              default: 0
              description: Precise master sort position (ORDER BY sort, rank)
            rank:
              type: string
              default: ''
              description: Precise sort subrank position among elements with the same master sort value (ORDER BY sort, rank)
            name:
              type: string
              nullable: true
              description: Pocket name
            color:
              type: string
              description: Color
            create_datetime:
              type: string
              format: datetime
              description: Server-generated pocket create datetime (UTC)
            update_datetime:
              type: string
              format: date-time
              nullable: true
              default: null
              description: Server-generated pocket update datetime (UTC)
            activity_datetime:
              type: string
              format: date-time
              nullable: true
              default: null
              description: Server-generated item last activity datetime (UTC)
            client_touch_datetime:
              type: string
              format: date-time
              nullable: true
              default: null
              description: A descriptive datetime to be shown somewhere in the client UI, and not validated by server
            passcode:
              type: string
              nullable: true
              description: Passcode
            uuid:
              type: string
              nullable: true
              description: UUID value
        - type: object
          properties:
            extended_data:
              type: object
              nullable: true
              properties:
                lists_count:
                  type: integer
                  description: Number of lists in the pocket
    list:
      allOf:
        - $ref: '#/components/schemas/item'
        - type: object
          properties:
            pocket_id:
              type: integer
              default: null
              nullable: true
              description: Pocket ID
            type:
              type: string
              description: |
                Тип списка
                + checklist - перечень дел
                + notes - заметки
              enum:
                - checklist
                - notes
            icon:
              type: string
              description: Icon
            icon_url:
              type: string
              format: uri
              description: URL icon
            archived:
              type: integer
              default: 0
              description: Is archived
            hash:
              type: string
              default: null
              nullable: true
              description: Hash
            color:
              type: string
              description: Color
            passcode:
              type: string
              default: null
              nullable: true
              description: Passcode
            key_item_id:
              type: integer
              description: Key item
        - type: object
          properties:
            extended_data:
              type: object
              nullable: true
              properties:
                items_count:
                  type: integer
                  description: Number of active (non-completed) items in the list
                items_priority_count:
                  type: integer
                  description: Number of items in the list with max priority (only when >= 1)
                items_priority_value:
                  type: integer
                  description: The value of this max priority
                items_completed_count:
                  type: integer
                  description: Number of completed (archived) items
                users:
                  type: array
                  items:
                    $ref: '#/components/schemas/user'
    item:
      allOf:
        - type: object
          nullable: true
          default: [ ]
          properties:
            attachments:
              type: array
              nullable: true
              items:
                $ref: '#/components/schemas/attachment'
        - type: object
          nullable: true
          default: [ ]
          properties:
            external_links:
              type: array
              nullable: true
              items:
                $ref: '#/components/schemas/link'
        - type: object
          nullable: true
          default: [ ]
          properties:
            tags:
              type: array
              nullable: true
              items:
                type: string
                description: Tag name
        - type: object
          properties:
            id:
              type: integer
              nullable: true
              default: null
              description: Entity identifier
            list_id:
              type: integer
              nullable: true
              default: null
              description: List ID
            contact_id:
              type: integer
              nullable: false
              description: Contact ID
            parent_id:
              type: integer
              nullable: false
              default: null
              description: Parent identifier
            sort:
              type: integer
              default: 0
              description: Precise master sort position (ORDER BY sort, rank) within a list
            rank:
              type: string
              default: ''
              description: Precise sort subrank position among elements with the same master sort value (ORDER BY sort, rank)
            has_children:
              type: integer
              default: 0
              description: Has children
            status:
              type: integer
              default: 0
              description: Item status (0 for active/undone, 1 for completed/done)
            priority:
              type: integer
              default: 0
              description: Priority (0, 1, 2, ..., N)
            calc_priority:
              type: integer
              default: 0
              description: Dynamic priority (based on a max of due & manually set priority)
            create_datetime:
              type: string
              format: date-time
              description: Server-generated item create datetime (UTC)
            update_datetime:
              type: string
              format: date-time
              nullable: true
              default: null
              description: Server-generated item update datetime (UTC)
            activity_datetime:
              type: string
              format: date-time
              nullable: true
              default: null
              description: Server-generated item last activity datetime (UTC)
            complete_datetime:
              type: string
              format: date-time
              nullable: true
              default: null
              description: Server-generated item 'mark as completed' datetime (UTC)
            complete_contact_id:
              type: integer
              nullable: true
              default: null
              description: Complete Contact ID
            name:
              type: string
              nullable: true
              description: Name item
            note:
              type: string
              default: ''
              nullable: true
              description: Note item
            due_date:
              type: string
              format: date
              nullable: true
              default: null
              description: Item due date (for all-day items)
            due_datetime:
              type: string
              format: date-time
              nullable: true
              default: null
              description: Item due date (for all-day items)time (UTC)
            client_touch_datetime:
              type: string
              format: date-time
              nullable: true
              default: null
              description: A descriptive datetime to be shown somewhere in the client UI, and not validated by server
            location_id:
              type: integer
              nullable: true
              default: null
              description: Location ID
            amount:
              type: number
              default: 0
              description: Amount
            currency_iso3:
              type: string
              nullable: true
              default: null
              description: Currency ISO-3 code
            assigned_contact_id:
              type: integer
              nullable: true
              default: null
              description: Assigned/responsible user contact ID
            repeat:
              type: integer
              default: 0
              description: Repeat
            key_list_id:
              type: integer
              nullable: true
              default: null
              description: Key list ID
            uuid:
              type: string
              nullable: true
              default: null
              description: UUID value
        - type: object
          properties:
            extended_data:
              type: object
              nullable: true
              properties:
                comments_count:
                  type: integer
                  nullable: true
                  description: Number of comments linked to this item
    comment:
      type: object
      properties:
        id:
          type: integer
          description: Comment ID
        item_id:
          type: integer
          description: Item ID
        item_name:
          type: string
          description: Name item
        contact_id:
          type: integer
          description: Contact ID
        comment:
          type: string
          nullable: true
          description: Comment text
        create_datetime:
          type: string
          format: datetime
          description: Server-generated comment create datetime (UTC)
        update_datetime:
          type: string
          format: date-time
          nullable: true
          default: null
          description: Server-generated comment update datetime (UTC)
        client_touch_datetime:
          type: string
          format: date-time
          nullable: true
          description: A descriptive datetime to be shown somewhere in the client UI, and not validated by server
        uuid:
          type: string
          nullable: true
          description: UUID value
    location:
      type: object
      properties:
        id:
          type: integer
          description: Location ID
        name:
          type: string
          nullable: true
          description: Location name
        color:
          type: string
          nullable: true
          description: Location color
        location_latitude:
          type: number
          nullable: true
          description: Location latitude
        location_longitude:
          type: number
          nullable: true
          description: Location longitude
        location_radius:
          type: integer
          nullable: true
          description: Location radius
        create_datetime:
          type: string
          format: datetime
          description: Server-generated location create datetime (UTC)
        update_datetime:
          type: string
          format: date-time
          nullable: true
          default: null
          description: Server-generated location update datetime (UTC)
        activity_datetime:
          type: string
          format: date-time
          nullable: true
          default: null
          description: Server-generated item last activity datetime (UTC)
        uuid:
          type: string
          nullable: true
          description: UUID value
    link:
      type: object
      properties:
        id:
          type: integer
          description: Link ID
        item_id:
          type: integer
          description: Item ID
        app:
          type: string
          description: Application identifier
        entity_type:
          type: string
          description: Entity type
        entity_id:
          type: string
          description: Entity identifier
        data:
          type: string
          description: Link data
    user:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        username:
          type: string
        photo_url:
          type: string
          format: uri
        user_pic:
          type: string
          format: uri
        status:
          type: string
        team_role:
          type: string
        login:
          type: string
        me:
          type: boolean
        exists:
          type: boolean
        last_activity:
          type: string
          format: datetime
        email:
          type: string
        locale:
          type: string
        items_info:
          type: object
          nullable: true
          properties:
            count:
              type: integer
            count_priority:
              type: integer
            max_priority:
              type: integer
            count_max_priority:
              type: integer
            count_priorities:
              type: object
              properties:
                0:
                  type: integer
                1:
                  type: integer
                2:
                  type: integer
                3:
                  type: integer
                4:
                  type: integer
                5:
                  type: integer
    log:
      type: object
      properties:
        id:
          type: integer
          description: Log record ID
        action:
          type: string
          description: Action
        entity_type:
          type: string
          description: Entity type
        contact_id:
          type: integer
          description: Contact ID
        pocket_id:
          type: integer
          description: Pocket ID
        list_id:
          type: integer
          description: List ID
        item_id:
          type: integer
          description: Item ID
        comment_id:
          type: integer
          nullable: true
          description: Comment ID
        attachment_id:
          type: integer
          nullable: true
          description: Attachment ID
        location_id:
          type: integer
          nullable: true
          description: Location ID
        additional_id:
          type: integer
          nullable: true
          description: Additional identifier
        assigned_contact_id:
          type: integer
          nullable: true
          description: Assigned/responsible user contact ID
        create_datetime:
          type: string
          format: datetime
          description: Server-generated log entry datetime (UTC)
        params:
          type: string
          description: Custom descriptive params (JSON)
    response:
      allOf:
        - type: object
          properties:
            status_code:
              type: string
              description: Status code
              enum:
                - ok
                - error
            error:
              type: string
              description: Error description
        - $ref: '#/components/schemas/part_response'
    part_response:
      allOf:
        - type: object
          properties:
            data:
              type: array
              items:
                allOf:
                  - type: object
                    properties:
                      success:
                        type: boolean
                        description: Status code
                      errors:
                        type: array
                        items:
                          type: string
                          description: Error description
                  - type: object
                    properties:
                      data:
                        anyOf:
                          - $ref: '#/components/schemas/attachment'
                          - $ref: '#/components/schemas/comment'
                          - $ref: '#/components/schemas/item'
                          - $ref: '#/components/schemas/list'
                          - $ref: '#/components/schemas/location'
                          - $ref: '#/components/schemas/log'
                          - $ref: '#/components/schemas/pocket'
                          - $ref: '#/components/schemas/user'
        - type: object
          properties:
            meta:
              type: object
              properties:
                offset:
                  type: integer
                  description: Number of first 'offset' records skipped in the response
                limit:
                  type: integer
                  description: Limit value specified in the request data
                count:
                  type: integer
                  description: Total number of records matching the query
