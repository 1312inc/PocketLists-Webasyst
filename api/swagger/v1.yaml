# validate https://editor.swagger.io/
openapi: 3.0.0
info:
  title: 'Pocket Lists API'
  description: ''
  version: 1.0.0
servers:
  - url: /api.php
    description: Current host server

paths:
  /pocketlists.attachment.add:
    put:
      security:
        - BearerAuth: [ ]
      summary: Добавить новые аттачменты
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                required:
                  - item_id
                  - file
                  - file_name
                type: object
                properties:
                  item_id:
                    type: integer
                    description: Item identifier
                  file:
                    type: string
                    format: byte
                    description: File binary content
                  file_name:
                    type: string
                    description: File name
                  uuid:
                    type: string
                    nullable: true
                    description: UUID value
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/attachment'
                    - type: object
                      properties:
                        errors:
                          type: array
                          items:
                            type: string
                            description: Error description
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: Internal server error.
  /pocketlists.attachment.delete:
    delete:
      security:
        - BearerAuth: [ ]
      summary: Удалить аттачменты
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/item_attach'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/item_attach'
                    - type: object
                      properties:
                        error:
                          type: string
                          description: Description error
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        403:
          description: Access denied to the Pocket Lists app or this API method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: Internal server error.
  /pocketlists.comment.add:
    put:
      security:
        - BearerAuth: [ ]
      summary: Добавить новый комментарий
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - item_id
                - comment
              properties:
                item_id:
                  type: integer
                  description: Item identifier
                comment:
                  type: string
                  description: Comment text
                uuid:
                  type: string
                  nullable: true
                  description: UUID value
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/comment'
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        403:
          description: Access denied to the Pocket Lists app or this API method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        404:
          description: Pocket not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: Internal server error.
  /pocketlists.comment.delete:
    delete:
      security:
        - BearerAuth: [ ]
      summary: Удаление комментариев
      parameters:
        - in: query
          name: id[]
          description: Comment identifiers
          required: true
          schema:
            type: array
            items:
              type: integer
      responses:
        204:
          description: OK
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: Internal server error.
  /pocketlists.comment.getList:
    get:
      security:
        - BearerAuth: [ ]
      summary: Get comments
      parameters:
        - in: query
          name: item_id
          description: ID айтема
          schema:
            type: integer
        - in: query
          name: offset
          description: Смещение списка (по умолчанию 0)
          schema:
            type: integer
        - in: query
          name: limit
          description: Размер порции списка (по умолчанию 30, максимум 500)
          schema:
            type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  offset:
                    type: integer
                    description: Offset
                  limit:
                    type: integer
                    description: Limit
                  count:
                    type: integer
                    description: Count
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/comment'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: Internal server error.
  /pocketlists.comment.update:
    put:
      security:
        - BearerAuth: [ ]
      summary: Update comment
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - id
                - comment
              properties:
                id:
                  type: integer
                  description: Comment identifier
                comment:
                  type: string
                  description: Comment text
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/comment'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: Internal server error.
  /pocketlists.item.add:
    put:
      security:
        - BearerAuth: [ ]
      summary: Добавить новый айтем
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                required:
                  - list_id
                properties:
                  list_id:
                    type: integer
                    description: List identifier
                  name:
                    type: string
                    description: Name
                  note:
                    type: string
                    description: Note
                  sort:
                    type: string
                    description: Sort
                  assigned_contact_id:
                    type: integer
                    nullable: true
                    description: Assigned contact identifier
                  priority:
                    type: integer
                    description: Priority
                  due_datetime:
                    type: string
                    format: date-time
                    nullable: true
                    description: Due datetime
                  prev_item_id:
                    type: integer
                    nullable: true
                    description: Предыдущий идентификатор айтема для сортировки
                  prev_item_uuid:
                    type: string
                    nullable: true
                    description: Предыдущий UUID айтема для сортировки
                  uuid:
                    type: string
                    nullable: true
                    description: UUID value
                  attachments:
                    type: array
                    description: Files
                    items:
                      required:
                        - file
                        - file_name
                      type: object
                      properties:
                        file:
                          type: string
                          format: byte
                          description: File binary content
                        file_name:
                          type: string
                          description: File name
                        uuid:
                          type: string
                          nullable: true
                          description: UUID value
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/item'
                    - type: object
                      properties:
                        errors:
                          type: array
                          items:
                            type: string
                            description: Error description
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/errorResponse'
                  - type: array
                    items:
                      $ref: '#/components/schemas/item'
        404:
          description: Pocket not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: Internal server error.
  /pocketlists.item.delete:
    delete:
      security:
        - BearerAuth: [ ]
      summary: Удаление айтемов
      parameters:
        - in: query
          name: id[]
          description: Item identifiers
          required: true
          schema:
            type: array
            items:
              type: integer
      responses:
        204:
          description: OK
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: Internal server error.
  /pocketlists.item.getList:
    get:
      security:
        - BearerAuth: [ ]
      summary: Get items
      parameters:
        - in: query
          name: id[]
          description: Item identifiers
          schema:
            type: array
            items:
              type: integer
        - in: query
          name: list_id
          description: ID списка
          schema:
            type: integer
        - in: query
          name: starting_from
          description: Временная метка, начиная с которой возвращаются записи
          schema:
            type: integer
        - in: query
          name: offset
          description: Смещение списка (по умолчанию 0)
          schema:
            type: integer
        - in: query
          name: limit
          description: Размер порции списка (по умолчанию 30, максимум 500)
          schema:
            type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  offset:
                    type: integer
                    description: Offset
                  limit:
                    type: integer
                    description: Limit
                  count:
                    type: integer
                    description: Count
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/item'
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: Internal server error.
  /pocketlists.item.update:
    put:
      security:
        - BearerAuth: [ ]
      summary: Редактировать айтем
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - id
                - list_id
              properties:
                id:
                  type: integer
                  description: Item identifier
                list_id:
                  type: integer
                  description: List identifier
                name:
                  type: string
                  description: Item name
                note:
                  type: string
                  description: Note
                sort:
                  type: string
                  description: Sort
                assigned_contact_id:
                  type: integer
                  description: Assigned contact identifier
                priority:
                  type: integer
                  description: Priority
                due_datetime:
                  type: string
                  format: date-time
                  description: Due datetime
                attachments:
                  type: array
                  description: Files
                  items:
                    required:
                      - file
                      - file_name
                    type: object
                    properties:
                      file:
                        type: string
                        format: byte
                        description: File binary content
                      file_name:
                        type: string
                        description: File name
                      uuid:
                        type: string
                        nullable: true
                        description: UUID value
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/item'
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        403:
          description: Access denied to the Pocket Lists app or this API method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: Internal server error.
  /pocketlists.list.add:
    put:
      security:
        - BearerAuth: [ ]
      summary: Добавить новый список
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                required:
                  - name
                  - pocket_id
                properties:
                  pocket_id:
                    type: integer
                    description: ID проекта
                  name:
                    type: string
                    description: Название списка
                  color:
                    type: string
                    description: Color
                  icon:
                    type: string
                    description: Icon
                  sort:
                    type: string
                    description: Sort
                  type:
                    type: string
                    default: checklist
                    description: |
                      Тип списка
                      + checklist - перечень дел
                      + notes - заметки
                    enum:
                      - checklist
                      - notes
                  uuid:
                    type: string
                    nullable: true
                    description: UUID value
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/list'
                    - type: object
                      properties:
                        status_code:
                          type: string
                          description: Status code
                          enum:
                            - ok
                            - error
                    - type: object
                      properties:
                        errors:
                          type: array
                          items:
                            type: string
                            description: Error description
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        403:
          description: Access denied to the Pocket Lists app or this API method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        404:
          description: Pocket not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: Internal server error.
  /pocketlists.list.delete:
    delete:
      security:
        - BearerAuth: [ ]
      summary: Удаление списков
      parameters:
        - in: query
          name: id[]
          description: List identifiers
          required: true
          schema:
            type: array
            items:
              type: integer
      responses:
        204:
          description: OK
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: Internal server error.
  /pocketlists.list.getList:
    get:
      security:
        - BearerAuth: [ ]
      summary: Получить список
      parameters:
        - in: query
          name: id[]
          description: List identifiers
          schema:
            type: array
            items:
              type: integer
        - in: query
          name: starting_from
          description: Временная метка, начиная с которой возвращаются записи
          schema:
            type: integer
        - in: query
          name: offset
          description: Смещение списка (по умолчанию 0)
          schema:
            type: integer
        - in: query
          name: limit
          description: Размер порции списка (по умолчанию 30, максимум 500)
          schema:
            type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  offset:
                    type: integer
                    description: Offset
                  limit:
                    type: integer
                    description: Limit
                  count:
                    type: integer
                    description: Count
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/list'
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        403:
          description: Access denied to the Pocket Lists app or this API method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: Internal server error.
  /pocketlists.list.update:
    put:
      security:
        - BearerAuth: [ ]
      summary: Редактировать список
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - id
              properties:
                id:
                  type: integer
                  description: List identifier
                name:
                  type: string
                  description: Name list
                icon:
                  type: string
                  description: Icon
                color:
                  type: string
                  description: Color
                sort:
                  type: string
                  description: Sort
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/list'
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: Internal server error.
  /pocketlists.log.get:
    get:
      security:
        - BearerAuth: [ ]
      summary: Получить историю
      parameters:
        - in: query
          name: starting_from
          description: Временная метка, начиная с которой возвращаются записи
          required: true
          schema:
            type: integer
        - in: query
          name: offset
          description: Смещение списка (по умолчанию 0)
          schema:
            type: integer
        - in: query
          name: limit
          description: Размер порции списка (по умолчанию 30, максимум 500)
          schema:
            type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  offset:
                    type: integer
                    description: Offset
                  limit:
                    type: integer
                    description: Limit
                  count:
                    type: integer
                    description: Count
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/log'
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: Internal server error.
  /pocketlists.log.getSummary:
    get:
      security:
        - BearerAuth: [ ]
      summary: Получить статистику изменений
      parameters:
        - in: query
          name: starting_from
          description: Временная метка, начиная с которой возвращаются записи
          required: true
          schema:
            type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  starting_from:
                    type: integer
                    description: Временная метка, начиная с которой возвращаются записи
                  ending_to:
                    type: integer
                    description: Текущая временная метка
                  data:
                    type: object
                    properties:
                      pockets:
                        type: integer
                      lists:
                        type: integer
                      items:
                        type: integer
                      comments:
                        type: integer
                      attachments:
                        type: integer
                      location:
                        type: integer
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: Internal server error.
  /pocketlists.pocket.add:
    put:
      security:
        - BearerAuth: [ ]
      summary: Добавить новый проект
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
                  description: Название проекта
                color:
                  type: string
                  description: Цвет
                sort:
                  type: string
                  description: Sort
                uuid:
                  type: string
                  description: UUID value
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pocket'
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: Internal server error.
  /pocketlists.pocket.delete:
    delete:
      security:
        - BearerAuth: [ ]
      summary: Удалить проект
      parameters:
        - in: query
          name: pocket_id
          description: Pocket identifier
          schema:
            type: integer
      responses:
        204:
          description: OK
        500:
          description: Internal server error.
  /pocketlists.pocket.getList:
    get:
      security:
        - BearerAuth: [ ]
      summary: Получить проект
      parameters:
        - in: query
          name: id[]
          description: Pocket identifiers
          schema:
            type: array
            items:
              type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  offset:
                    type: integer
                    description: Offset
                  limit:
                    type: integer
                    description: Limit
                  count:
                    type: integer
                    description: Count
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/pocket'
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /pocketlists.pocket.update:
    put:
      security:
        - BearerAuth: [ ]
      summary: Редактировать проект
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - id
              properties:
                id:
                  type: integer
                  description: Pocket identifier
                name:
                  type: string
                  description: Название проекта
                color:
                  type: string
                  description: Цвет
                sort:
                  type: string
                  description: Sort
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pocket'
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: Internal server error.
  /pocketlists.system.getCurrentTimestamp:
    get:
      security:
        - BearerAuth: [ ]
      summary: Получить текущую временную метку
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: integer
                description: Current timestamp
  /pocketlists.user.getList:
    get:
      security:
        - BearerAuth: [ ]
      summary: Список команды
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  offset:
                    type: integer
                    description: Offset
                  limit:
                    type: integer
                    description: Limit
                  count:
                    type: integer
                    description: Count
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/user'
        500:
          description: Internal server error.
  /pocketlists.system.getWebsocketUrl:
    get:
      security:
        - BearerAuth: [ ]
      summary: Получить адрес подключения к websocket.
      parameters:
        - in: query
          name: channel
          description: Channel identifier
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  url:
                    type: string
                    format: uri
                    description: URL websocket
                  channel:
                    type: string
                    nullable: true
                    description: Channel identifier
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: Internal server error.

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
  schemas:
    attachment:
      type: object
      properties:
        id:
          type: integer
        item_id:
          type: integer
        file_name:
          type: string
        file_type:
          type: string
          enum:
            - image
        url:
          type: string
          format: uri
          description: File URL
        uuid:
          type: string
          nullable: true
          description: UUID value
        error:
          type: string
    pocket:
      type: object
      properties:
        id:
          type: integer
          description: Pocket identifier
        sort:
          type: string
          description: Sort
        name:
          type: string
          description: Pocket name
        color:
          type: string
          description: Color
        passcode:
          type: string
          nullable: true
          description: Passcode
        uuid:
          type: string
          nullable: true
          description: UUID value
    list:
      allOf:
        - $ref: '#/components/schemas/item'
        - type: object
          properties:
            pocket_id:
              type: integer
              description: Pocket identifier
            type:
              type: string
              description: |
                Тип списка
                + checklist - перечень дел
                + notes - заметки
              enum:
                - checklist
                - notes
            icon:
              type: string
              description: Icon
            archived:
              type: integer
              description: Is archived
            hash:
              type: string
              description: Hash
            color:
              type: string
              description: Color
            passcode:
              type: string
              description: Passcode
            key_item_id:
              type: integer
              description: Key item
    item:
      type: object
      properties:
        id:
          type: integer
          description: Entity identifier
        list_id:
          type: integer
          nullable: true
          description: List identifier
        contact_id:
          type: integer
          description: Contact identifier
        parent_id:
          type: integer
          description: Parent identifier
        sort:
          type: string
          description: Sort
        has_children:
          type: boolean
          description: Has children
        status:
          type: integer
          description: Status
        priority:
          type: integer
          description: Priority
        calc_priority:
          type: integer
          description: Calc priority
        create_datetime:
          type: string
          format: date-time
          description: Create datetime
        update_datetime:
          type: string
          format: date-time
          nullable: true
          description: Update datetime
        complete_datetime:
          type: string
          format: date-time
          nullable: true
          description: Complete datetime
        complete_contact_id:
          type: integer
          nullable: true
          description: Complete contact identifier
        name:
          type: string
          description: Name item
        note:
          type: string
          description: Note item
        due_date:
          type: string
          format: date
          nullable: true
          description: Due date
        due_datetime:
          type: string
          format: date-time
          nullable: true
          description: Due datetime
        location_id:
          type: integer
          nullable: true
          description: Location identifier
        amount:
          type: number
          description: Amount
        currency_iso3:
          type: string
          description: Currency ISO3
        assigned_contact_id:
          type: integer
          nullable: true
          description: Assigned contact identifier
        repeat:
          type: integer
          description: Repeat
        key_list_id:
          type: integer
          description: Key list identifier
        uuid:
          type: string
          nullable: true
          description: UUID value
        favorite:
          type: boolean
          description: Favorite
        attachments_count:
          type: integer
          description: Attachments count
        comments_count:
          type: integer
          description: Comments count
        linked_entities_count:
          type: integer
          description: Linked entities count
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/attachment'
    comment:
      type: object
      properties:
        id:
          type: integer
          description: Comment identifier
        item_id:
          type: integer
          description: Item identifier
        item_name:
          type: string
          description: Name item
        contact_id:
          type: integer
          description: Contact identifier
        comment:
          type: string
          description: Comment text
        create_datetime:
          type: string
          format: datetime
          description: Create datetime
        uuid:
          type: string
          nullable: true
          description: UUID value
    user:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        username:
          type: string
        photo_url:
          type: string
          format: uri
        user_pic:
          type: string
          format: uri
        status:
          type: string
        team_role:
          type: string
        login:
          type: string
        me:
          type: boolean
        exists:
          type: boolean
        last_activity:
          type: string
          format: datetime
        email:
          type: string
        locale:
          type: string
        items_info:
          type: object
          properties:
            count:
              type: integer
            count_priority:
              type: integer
            max_priority:
              type: integer
            count_max_priority:
              type: integer
            count_priorities:
              type: object
              properties:
                0:
                  type: integer
                1:
                  type: integer
                2:
                  type: integer
                3:
                  type: integer
                4:
                  type: integer
                5:
                  type: integer
    log:
      type: object
      properties:
        id:
          type: integer
          description: Log identifier
        action:
          type: string
          description: Action
        entity_type:
          type: string
          description: Entity type
        contact_id:
          type: integer
          description: Contact identifier
        pocket_id:
          type: integer
          description: Pocket identifier
        list_id:
          type: integer
          description: List identifier
        item_id:
          type: integer
          description: Item identifier
        comment_id:
          type: integer
          nullable: true
          description: Comment identifier
        attachment_id:
          type: integer
          nullable: true
          description: Attachment identifier
        location_id:
          type: integer
          nullable: true
          description: Location identifier
        additional_id:
          type: integer
          nullable: true
          description: Additional identifier
        assigned_contact_id:
          type: integer
          nullable: true
          description: Assigned contact identifier
        create_datetime:
          type: string
          format: datetime
          description: Create datetime
        params:
          type: string
          description: Params, JSON
    item_attach:
      type: object
      required:
        - item_id
        - attachment_id
      properties:
        item_id:
          type: integer
          description: Item identifier
        attachment_id:
          type: array
          items:
            type: integer
            description: Attachment identifier
    errorResponse:
      type: object
      properties:
        error:
          type: string
          description: Error code
        error_description:
          type: string
          description: Error description
