# validate https://editor.swagger.io/
openapi: 3.0.0
info:
  title: 'Pocket Lists API'
  description: ''
  version: 1.0.0
servers:
  - url: /api.php
    description: Current host server

paths:
  /pocketlists.attachments.add:
    put:
      security:
        - BearerAuth: [ ]
      summary: Добавить новые аттачменты
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                required:
                  - item_id
                  - file
                  - file_name
                type: object
                properties:
                  item_id:
                    type: integer
                    description: Item identifier
                  file:
                    type: string
                    format: byte
                    description: File binary content
                  file_name:
                    type: string
                    description: File name
                  uuid:
                    type: string
                    nullable: true
                    description: Unique UUID value
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        500:
          description: Internal server error.
  /pocketlists.attachments.delete:
    delete:
      security:
        - BearerAuth: [ ]
      summary: Удалить аттачмент
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                required:
                  - id
                  - item_id
                properties:
                  id:
                    type: integer
                    description: Attachment identifier
                  item_id:
                    type: integer
                    description: Item identifier
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        403:
          description: Access denied to the Pocket Lists app or this API method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        500:
          description: Internal server error.
  /pocketlists.comments.add:
    put:
      security:
        - BearerAuth: [ ]
      summary: Добавить новый комментарий
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                required:
                  - item_id
                  - comment
                properties:
                  item_id:
                    type: integer
                    description: Item identifier
                  comment:
                    type: string
                    description: Comment text
                  client_touch_datetime:
                    type: string
                    format: date-time
                    nullable: true
                    description: A descriptive datetime (UTC) to be shown somewhere in the client UI, and not validated by server
                  uuid:
                    type: string
                    nullable: true
                    description: Unique UUID value
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        403:
          description: Access denied to the Pocket Lists app or this API method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        404:
          description: Pocket not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        500:
          description: Internal server error.
  /pocketlists.comments.delete:
    delete:
      security:
        - BearerAuth: [ ]
      summary: Удалить комментарий
      parameters:
        - in: query
          name: id[]
          description: Comment identifiers
          required: true
          schema:
            type: array
            items:
              type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        500:
          description: Internal server error.
  /pocketlists.comments.get:
    get:
      security:
        - BearerAuth: [ ]
      summary: Get comments
      parameters:
        - in: query
          name: item_id
          description: ID айтема
          schema:
            type: integer
        - in: query
          name: offset
          description: Смещение списка (по умолчанию 0)
          schema:
            type: integer
        - in: query
          name: limit
          description: Размер порции списка (по умолчанию 30, максимум 500)
          schema:
            type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        500:
          description: Internal server error.
  /pocketlists.comments.update:
    patch:
      security:
        - BearerAuth: [ ]
      summary: Update comment
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                required:
                  - id
                  - comment
                properties:
                  action:
                    type: string
                    default: patch
                    description: Обновить или пропатчить сущность
                    enum:
                      - patch
                      - update
                  id:
                    type: integer
                    description: Comment identifier
                  comment:
                    type: string
                    description: Comment text
                  client_touch_datetime:
                    type: string
                    format: date-time
                    nullable: true
                    description: A descriptive datetime (UTC) to be shown somewhere in the client UI, and not validated by server
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        500:
          description: Internal server error.
  /pocketlists.items.add:
    put:
      security:
        - BearerAuth: [ ]
      summary: Добавить новый айтем
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  list_id:
                    type: integer
                    description: List identifier
                  name:
                    type: string
                    description: Name
                  note:
                    type: string
                    description: Note
                  sort:
                    type: integer
                    description: Sort
                  rank:
                    type: string
                    maxLength: 8
                    description: Sort rank, [0-9A-z]
                  status:
                    type: integer
                    description: Item status done/undone
                    enum:
                      - 0
                      - 1
                  assigned_contact_id:
                    type: integer
                    nullable: true
                    description: Assigned contact identifier
                  priority:
                    type: integer
                    description: Priority
                  location_id:
                    type: integer
                    description: Location identifier
                  due_date:
                    type: string
                    format: date
                    nullable: true
                    description: Item due date
                  due_datetime:
                    type: string
                    format: date-time
                    nullable: true
                    description: Item exact due datetime (UTC)
                  client_touch_datetime:
                    type: string
                    format: date-time
                    nullable: true
                    description: A descriptive datetime (UTC) to be shown somewhere in the client UI, and not validated by server
                  uuid:
                    type: string
                    nullable: true
                    description: Unique UUID value
                  prev_item_id:
                    type: integer
                    nullable: true
                    description: Предыдущий идентификатор айтема для сортировки
                  prev_item_uuid:
                    type: string
                    nullable: true
                    description: Предыдущий UUID айтема для сортировки
                  tags:
                    type: array
                    items:
                      type: string
                      description: Tag name
                  attachments:
                    type: array
                    description: Files
                    items:
                      required:
                        - file
                        - file_name
                      type: object
                      properties:
                        file:
                          type: string
                          format: byte
                          description: File binary content
                        file_name:
                          type: string
                          description: File name
                        uuid:
                          type: string
                          nullable: true
                          description: Unique UUID value
                  external_links:
                    type: array
                    description: External links
                    items:
                      required:
                        - app_id
                        - entity_type
                        - entity_id
                      type: object
                      properties:
                        app_id:
                          type: string
                          description: App identifier
                        entity_type:
                          type: string
                          description: Entity type
                        entity_id:
                          type: string
                          description: Entity identifier
                        entity_data:
                          type: string
                          description: Entity data
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        404:
          description: Pocket not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        500:
          description: Internal server error.
  /pocketlists.items.delete:
    delete:
      security:
        - BearerAuth: [ ]
      summary: Удалить айтем
      parameters:
        - in: query
          name: id[]
          description: Item identifiers
          required: true
          schema:
            type: array
            items:
              type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        500:
          description: Internal server error.
  /pocketlists.items.get:
    get:
      security:
        - BearerAuth: [ ]
      summary: Get items
      parameters:
        - in: query
          name: id[]
          description: Item identifiers
          schema:
            type: array
            items:
              type: integer
        - in: query
          name: list_id
          description: ID списка
          schema:
            type: integer
        - in: query
          name: location_id
          description: Filtering by location identifier
          schema:
            type: integer
        - in: query
          name: status
          description: Item status
          schema:
            type: integer
        - in: query
          name: tag
          description: Filtering by tag
          schema:
            type: string
        - in: query
          name: external_app_id
          description: Filtering by external app identifier
          schema:
            type: string
        - in: query
          name: external_entity_type
          description: Filtering by external entity type
          schema:
            type: string
        - in: query
          name: external_entity_id
          description: External entity identifier
          schema:
            type: string
        - in: query
          name: starting_from
          description: Дата и время, начиная с которой возвращаются записи
          schema:
            type: string
            format: date-time
        - in: query
          name: offset
          description: Смещение списка (по умолчанию 0)
          schema:
            type: integer
        - in: query
          name: limit
          description: Размер порции списка (по умолчанию 30, максимум 500)
          schema:
            type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        500:
          description: Internal server error.
  /pocketlists.items.getStream:
    get:
      security:
        - BearerAuth: [ ]
      summary: Get items
      parameters:
        - in: query
          name: filter
          required: true
          description: |
            Filter value.
            Примеры фильтров:
            + **upnext**: айтемы сортированные по приоритету и дате выполнения
            + **due**: айтемы сортированные по возрастанию даты выполнения
            + **priority**: айтемы сортированные по приоритету
            + **user/55**: айтемы назначенные на указанного пользователя
            + **search/KEYWORD**: айтемы содержащие ключевое слово
            + **nearby**, **nearby/28.635896,-106.075763**: айтемы поблизости
          example: upnext, user/ID, search/KEYWORD
          schema:
            type: string
        - in: query
          name: status
          description: Item status
          schema:
            type: integer
        - in: query
          name: offset
          description: Смещение списка (по умолчанию 0)
          schema:
            type: integer
        - in: query
          name: limit
          description: Размер порции списка (по умолчанию 30, максимум 500)
          schema:
            type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/response'
                  - type: object
                    properties:
                      filter:
                        type: string
                        description: Filter value
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        500:
          description: Internal server error.
  /pocketlists.items.update:
    patch:
      security:
        - BearerAuth: [ ]
      summary: Редактировать айтем
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                required:
                  - id
                properties:
                  action:
                    type: string
                    default: patch
                    description: Обновить или пропатчить сущность
                    enum:
                      - patch
                      - update
                  id:
                    type: integer
                    description: Item identifier
                  list_id:
                    type: integer
                    description: List identifier
                  name:
                    type: string
                    description: Item name
                  note:
                    type: string
                    description: Note
                  sort:
                    type: integer
                    description: Sort
                  rank:
                    type: string
                    maxLength: 8
                    description: Sort rank, [0-9A-z]
                  status:
                    type: integer
                    description: Item status undone/done
                    enum:
                      - 0
                      - 1
                  assigned_contact_id:
                    type: integer
                    description: Assigned contact identifier
                  priority:
                    type: integer
                    description: Priority
                  location_id:
                    type: integer
                    description: Location identifier
                  due_datetime:
                    type: string
                    format: date-time
                    nullable: true
                    description: Item exact due datetime (UTC)
                  due_date:
                    type: string
                    format: date
                    nullable: true
                    description: Item due date
                  client_touch_datetime:
                    type: string
                    format: date-time
                    nullable: true
                    description: A descriptive datetime (UTC) to be shown somewhere in the client UI, and not validated by server
                  prev_item_id:
                    type: integer
                    nullable: true
                    description: Предыдущий идентификатор айтема для сортировки
                  tags:
                    type: array
                    items:
                      type: string
                      description: Tag name
                  attachments:
                    type: array
                    description: Files
                    items:
                      required:
                        - file
                        - file_name
                      type: object
                      properties:
                        file:
                          type: string
                          format: byte
                          description: File binary content
                        file_name:
                          type: string
                          description: File name
                        uuid:
                          type: string
                          nullable: true
                          description: Unique UUID value
                  external_links:
                    type: array
                    description: External links
                    items:
                      required:
                        - app_id
                        - entity_type
                        - entity_id
                      type: object
                      properties:
                        app_id:
                          type: string
                          description: App identifier
                        entity_type:
                          type: string
                          description: Entity type
                        entity_id:
                          type: string
                          description: Entity identifier
                        entity_data:
                          type: string
                          description: Entity data
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        403:
          description: Access denied to the Pocket Lists app or this API method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        500:
          description: Internal server error.
  /pocketlists.lists.add:
    put:
      security:
        - BearerAuth: [ ]
      summary: Добавить новый список
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                required:
                  - name
                  - pocket_id
                properties:
                  pocket_id:
                    type: integer
                    description: ID проекта
                  name:
                    type: string
                    description: Название списка
                  icon:
                    type: string
                    description: Icon
                  color:
                    type: string
                    description: Color
                    default: none
                    enum:
                      - none
                      - red
                      - green
                      - blue
                      - yellow
                      - purple
                  client_touch_datetime:
                    type: string
                    format: date-time
                    nullable: true
                    description: A descriptive datetime (UTC) to be shown somewhere in the client UI, and not validated by server
                  sort:
                    type: integer
                    description: Sort
                  rank:
                    type: string
                    description: Sort rank
                  type:
                    type: string
                    default: checklist
                    description: |
                      Тип списка
                      + checklist - перечень дел
                      + notes - заметки
                    enum:
                      - checklist
                      - notes
                  uuid:
                    type: string
                    nullable: true
                    description: Unique UUID value
                  prev_list_id:
                    type: integer
                    nullable: true
                    description: Предыдущий идентификатор списка для сортировки
                  prev_list_uuid:
                    type: string
                    nullable: true
                    description: Предыдущий UUID списка для сортировки
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        403:
          description: Access denied to the Pocket Lists app or this API method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        404:
          description: Pocket not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        500:
          description: Internal server error.
  /pocketlists.lists.delete:
    delete:
      security:
        - BearerAuth: [ ]
      summary: Удалить список
      parameters:
        - in: query
          name: id[]
          description: List identifiers
          required: true
          schema:
            type: array
            items:
              type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        500:
          description: Internal server error.
  /pocketlists.lists.get:
    get:
      security:
        - BearerAuth: [ ]
      summary: Получить список
      parameters:
        - in: query
          name: id[]
          description: List identifiers
          schema:
            type: array
            items:
              type: integer
        - in: query
          name: starting_from
          description: Дата и время, начиная с которой возвращаются записи
          schema:
            type: string
            format: date-time
        - in: query
          name: offset
          description: Смещение списка (по умолчанию 0)
          schema:
            type: integer
        - in: query
          name: limit
          description: Размер порции списка (по умолчанию 30, максимум 500)
          schema:
            type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        403:
          description: Access denied to the Pocket Lists app or this API method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        500:
          description: Internal server error.
  /pocketlists.lists.update:
    patch:
      security:
        - BearerAuth: [ ]
      summary: Редактировать список
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                required:
                  - id
                properties:
                  action:
                    type: string
                    default: patch
                    description: Обновить или пропатчить сущность
                    enum:
                      - patch
                      - update
                  id:
                    type: integer
                    description: List identifier
                  pocket_id:
                    type: integer
                    description: ID проекта
                  name:
                    type: string
                    description: Name list
                  icon:
                    type: string
                    description: Icon
                  color:
                    type: string
                    description: Color
                    default: none
                    enum:
                      - none
                      - red
                      - green
                      - blue
                      - yellow
                      - purple
                  client_touch_datetime:
                    type: string
                    format: date-time
                    nullable: true
                    description: A descriptive datetime (UTC) to be shown somewhere in the client UI, and not validated by server
                  sort:
                    type: integer
                    description: Sort
                  rank:
                    type: string
                    description: Sort rank
                  prev_list_id:
                    type: integer
                    nullable: true
                    description: Предыдущий идентификатор списка для сортировки
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        500:
          description: Internal server error.
  /pocketlists.locations.add:
    put:
      security:
        - BearerAuth: [ ]
      summary: Добавить новую локацию
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                    description: Название локации
                  color:
                    type: string
                    description: Цвет локации
                  location_latitude:
                    type: number
                    description: Широта локации в градусах
                  location_longitude:
                    type: number
                    description: Долгота локации в градусах
                  location_radius:
                    type: integer
                    description: Радиус локации в метрах
                  uuid:
                    type: string
                    description: Unique UUID value
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        404:
          description: Pocket not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        500:
          description: Internal server error.
  /pocketlists.locations.delete:
    delete:
      security:
        - BearerAuth: [ ]
      summary: Удалить локацию
      parameters:
        - in: query
          name: id[]
          description: Location identifiers
          required: true
          schema:
            type: array
            items:
              type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        500:
          description: Internal server error.
  /pocketlists.locations.get:
    get:
      security:
        - BearerAuth: [ ]
      summary: Получить локацию
      parameters:
        - in: query
          name: location_id
          description: Location identifier
          schema:
            type: integer
        - in: query
          name: offset
          description: Смещение списка (по умолчанию 0)
          schema:
            type: integer
        - in: query
          name: limit
          description: Размер порции списка (по умолчанию 30, максимум 500)
          schema:
            type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        500:
          description: Internal server error.
  /pocketlists.locations.update:
    patch:
      security:
        - BearerAuth: [ ]
      summary: Редактировать локацию
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                required:
                  - id
                properties:
                  action:
                    type: string
                    default: patch
                    description: Обновить или пропатчить сущность
                    enum:
                      - patch
                      - update
                  id:
                    type: integer
                    description: Location identifier
                  name:
                    type: string
                    description: Название локации
                  color:
                    type: string
                    description: Цвет локации
                  location_latitude:
                    type: number
                    description: Широта локации в градусах
                  location_longitude:
                    type: number
                    description: Долгота локации в градусах
                  location_radius:
                    type: integer
                    description: Радиус локации в метрах
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        500:
          description: Internal server error.
  /pocketlists.log.get:
    get:
      security:
        - BearerAuth: [ ]
      summary: Получить историю
      parameters:
        - in: query
          name: starting_from
          required: true
          description: Дата и время, начиная с которой возвращаются записи
          schema:
            type: string
            format: date-time
        - in: query
          name: offset
          description: Смещение списка (по умолчанию 0)
          schema:
            type: integer
        - in: query
          name: limit
          description: Размер порции списка (по умолчанию 30, максимум 500)
          schema:
            type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        500:
          description: Internal server error.
  /pocketlists.log.getDeleted:
    get:
      security:
        - BearerAuth: [ ]
      summary: Получить историю удаленных сущностей
      parameters:
        - in: query
          name: starting_from
          required: true
          description: Дата и время, начиная с которой возвращаются записи
          schema:
            type: string
            format: date-time
        - in: query
          name: offset
          description: Смещение списка (по умолчанию 0)
          schema:
            type: integer
        - in: query
          name: limit
          description: Размер порции списка (по умолчанию 30, максимум 500)
          schema:
            type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        500:
          description: Internal server error.
  /pocketlists.log.getDeletedSummary:
    get:
      security:
        - BearerAuth: [ ]
      summary: Получить статистику удалений сущностей
      parameters:
        - in: query
          name: starting_from
          required: true
          description: Дата и время, начиная с которой возвращаются записи
          schema:
            type: string
            format: date-time
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/response'
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          starting_from:
                            type: string
                            format: date-time
                            description: Дата и время (UTC), начиная с которой возвращаются записи
                          ending_to:
                            type: string
                            format: date-time
                            description: Текущая дата и время (UTC)
                          pockets:
                            type: integer
                            description: ''
                          lists:
                            type: integer
                            description: ''
                          items:
                            type: integer
                            description: ''
                          comments:
                            type: integer
                            description: ''
                          attachments:
                            type: integer
                            description: ''
                          location:
                            type: integer
                            description: ''
  /pocketlists.log.getSummary:
    get:
      security:
        - BearerAuth: [ ]
      summary: Получить статистику изменений
      parameters:
        - in: query
          name: starting_from
          required: true
          description: Дата и время, начиная с которой возвращаются записи
          schema:
            type: string
            format: date-time

      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/response'
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          starting_from:
                            type: string
                            format: date-time
                            description: Дата и время (UTC), начиная с которой возвращаются записи
                          ending_to:
                            type: string
                            format: date-time
                            description: Текущая дата и время (UTC)
                          pockets:
                            type: integer
                            description: ''
                          lists:
                            type: integer
                            description: ''
                          items:
                            type: integer
                            description: ''
                          comments:
                            type: integer
                            description: ''
                          attachments:
                            type: integer
                            description: ''
                          location:
                            type: integer
                            description: ''
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        500:
          description: Internal server error.
  /pocketlists.pockets.add:
    put:
      security:
        - BearerAuth: [ ]
      summary: Добавить новый проект
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                required:
                  - name
                properties:
                  name:
                    type: string
                    description: Название проекта
                  color:
                    type: string
                    nullable: true
                    description: Цвет
                    enum:
                      - none
                      - red
                      - green
                      - blue
                      - yellow
                      - purple
                  sort:
                    type: integer
                    description: Sort
                  rank:
                    type: string
                    description: Sort rank
                  uuid:
                    type: string
                    description: Unique UUID value
                  prev_pocket_id:
                    type: integer
                    nullable: true
                    description: Предыдущий идентификатор проекта для сортировки
                  prev_pocket_uuid:
                    type: string
                    nullable: true
                    description: Предыдущий UUID проекта для сортировки
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        500:
          description: Internal server error.
  /pocketlists.pockets.delete:
    delete:
      security:
        - BearerAuth: [ ]
      summary: Удалить проект
      parameters:
        - in: query
          name: id[]
          description: Pocket identifiers
          required: true
          schema:
            type: array
            items:
              type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        400:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        500:
          description: Internal server error.
  /pocketlists.pockets.get:
    get:
      security:
        - BearerAuth: [ ]
      summary: Получить проект
      parameters:
        - in: query
          name: id[]
          description: Pocket identifiers
          schema:
            type: array
            items:
              type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
  /pocketlists.pockets.update:
    patch:
      security:
        - BearerAuth: [ ]
      summary: Редактировать проект
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                required:
                  - id
                properties:
                  action:
                    type: string
                    default: patch
                    description: Обновить или пропатчить сущность
                    enum:
                      - patch
                      - update
                  id:
                    type: integer
                    description: Pocket identifier
                  name:
                    type: string
                    description: Название проекта
                  color:
                    type: string
                    nullable: true
                    description: Цвет
                    enum:
                      - none
                      - red
                      - green
                      - blue
                      - yellow
                      - purple
                  sort:
                    type: integer
                    description: Sort
                  rank:
                    type: string
                    description: Sort rank
                  prev_pocket_id:
                    type: integer
                    nullable: true
                    description: Предыдущий идентификатор проекта для сортировки
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        500:
          description: Internal server error.
  /pocketlists.system.getTime:
    get:
      security:
        - BearerAuth: [ ]
      summary: Returns current server time in UTC.
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/response'
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          timestamp:
                            type: integer
                            description: UNIX timestamp
                          datetime:
                            type: string
                            format: date-time
                            description: UTC datetime in ISO 8601
                          user_timezone:
                            type: string
                            default: 'auto'
                            description: Timezone specified in the user custom profile settings
  /pocketlists.system.getWebsocketUrl:
    get:
      security:
        - BearerAuth: [ ]
      summary: Получить адрес подключения к websocket.
      parameters:
        - in: query
          name: channel
          description: Channel identifier
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/response'
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          url:
                            type: string
                            format: uri
                            description: URL websocket
                          channel:
                            type: string
                            nullable: true
                            description: Channel identifier
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        500:
          description: Internal server error.
  /pocketlists.users.get:
    get:
      security:
        - BearerAuth: [ ]
      summary: Список команды
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        500:
          description: Internal server error.

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
  schemas:
    attachment:
      type: object
      properties:
        id:
          type: integer
        item_id:
          type: integer
        file_name:
          type: string
        file_type:
          type: string
          enum:
            - image
        url:
          type: string
          format: uri
          description: File URL
        uuid:
          type: string
          nullable: true
          description: UUID value
    pocket:
      type: object
      properties:
        id:
          type: integer
          description: Pocket identifier
        sort:
          type: integer
          default: 0
          description: Sort
        rank:
          type: string
          default: ''
          description: Sort rank
        name:
          type: string
          description: Pocket name
        color:
          type: string
          description: Color
        passcode:
          type: string
          nullable: true
          description: Passcode
        uuid:
          type: string
          nullable: true
          description: UUID value
    list:
      allOf:
        - $ref: '#/components/schemas/item'
        - type: object
          properties:
            pocket_id:
              type: integer
              description: Pocket identifier
            type:
              type: string
              description: |
                Тип списка
                + checklist - перечень дел
                + notes - заметки
              enum:
                - checklist
                - notes
            icon:
              type: string
              description: Icon
            icon_url:
              type: string
              format: uri
              description: URL icon
            archived:
              type: integer
              description: Is archived
            hash:
              type: string
              description: Hash
            color:
              type: string
              description: Color
            passcode:
              type: string
              description: Passcode
            key_item_id:
              type: integer
              description: Key item
        - type: object
          properties:
            extended_data:
              type: object
              properties:
                count:
                  type: integer
                  description: Общее количество айтемов в списке
                priority_count:
                  type: integer
                  description: Количество айтемов с максимальным приоритетом
    item:
      allOf:
        - type: object
          properties:
            attachments:
              type: array
              items:
                $ref: '#/components/schemas/attachment'
        - type: object
          properties:
            external_links:
              type: array
              items:
                $ref: '#/components/schemas/link'
        - type: object
          properties:
            tags:
              type: array
              items:
                type: string
                description: Tag name
        - type: object
          properties:
            id:
              type: integer
              nullable: true
              default: null
              description: Entity identifier
            list_id:
              type: integer
              nullable: true
              default: null
              description: List identifier
            contact_id:
              type: integer
              nullable: false
              description: Contact identifier
            parent_id:
              type: integer
              nullable: false
              default: null
              description: Parent identifier
            sort:
              type: integer
              default: 0
              description: Sort
            rank:
              type: string
              default: ''
              description: Sort rank
            has_children:
              type: integer
              default: 0
              description: Has children
            status:
              type: integer
              default: 0
              description: Status
            priority:
              type: integer
              default: 0
              description: Priority
            calc_priority:
              type: integer
              default: 0
              description: Calc priority
            create_datetime:
              type: string
              format: date-time
              description: Server-generated item create datetime (UTC)
            update_datetime:
              type: string
              format: date-time
              nullable: true
              default: null
              description: Server-generated item update datetime (UTC)
            complete_datetime:
              type: string
              format: date-time
              nullable: true
              default: null
              description: Server-generated item 'mark as completed' datetime (UTC)
            complete_contact_id:
              type: integer
              nullable: true
              default: null
              description: Complete contact identifier
            name:
              type: string
              default: ''
              description: Name item
            note:
              type: string
              default: ''
              description: Note item
            due_date:
              type: string
              format: date
              nullable: true
              default: null
              description: Item due date
            due_datetime:
              type: string
              format: date-time
              nullable: true
              default: null
              description: Item due datetime (UTC)
            client_touch_datetime:
              type: string
              format: date-time
              nullable: true
              default: null
              description: A descriptive datetime (UTC) to be shown somewhere in the client UI, and not validated by server
            location_id:
              type: integer
              nullable: true
              default: null
              description: Location identifier
            amount:
              type: number
              default: 0
              description: Amount
            currency_iso3:
              type: string
              nullable: true
              default: null
              description: Currency ISO3
            assigned_contact_id:
              type: integer
              nullable: true
              default: null
              description: Assigned contact identifier
            repeat:
              type: integer
              default: 0
              description: Repeat
            key_list_id:
              type: integer
              nullable: true
              default: null
              description: Key list identifier
            uuid:
              type: string
              nullable: true
              default: null
              description: UUID value
        - type: object
          properties:
            extended_data:
              type: object
              properties:
                comments_count:
                  type: integer
                  description: Количество комментариев
    comment:
      type: object
      properties:
        id:
          type: integer
          description: Comment identifier
        item_id:
          type: integer
          description: Item identifier
        item_name:
          type: string
          description: Name item
        contact_id:
          type: integer
          description: Contact identifier
        comment:
          type: string
          description: Comment text
        create_datetime:
          type: string
          format: datetime
          description: Server-generated comment create datetime (UTC)
        client_touch_datetime:
          type: string
          format: date-time
          nullable: true
          description: A descriptive datetime (UTC) to be shown somewhere in the client UI, and not validated by server
        uuid:
          type: string
          nullable: true
          description: UUID value
    location:
      type: object
      properties:
        id:
          type: integer
          description: Location identifier
        name:
          type: string
          description: Location name
        color:
          type: string
          description: Location color
        location_latitude:
          type: number
          description: Location latitude
        location_longitude:
          type: number
          description: Location longitude
        location_radius:
          type: integer
          description: Location radius
        uuid:
          type: string
          nullable: true
          description: UUID value
    link:
      type: object
      properties:
        id:
          type: integer
          description: Link identifier
        item_id:
          type: integer
          description: Item identifier
        app:
          type: string
          description: Application identifier
        entity_type:
          type: string
          description: Entity type
        entity_id:
          type: string
          description: Entity identifier
        data:
          type: string
          description: Link data
    user:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        username:
          type: string
        photo_url:
          type: string
          format: uri
        user_pic:
          type: string
          format: uri
        status:
          type: string
        team_role:
          type: string
        login:
          type: string
        me:
          type: boolean
        exists:
          type: boolean
        last_activity:
          type: string
          format: datetime
        email:
          type: string
        locale:
          type: string
        items_info:
          type: object
          properties:
            count:
              type: integer
            count_priority:
              type: integer
            max_priority:
              type: integer
            count_max_priority:
              type: integer
            count_priorities:
              type: object
              properties:
                0:
                  type: integer
                1:
                  type: integer
                2:
                  type: integer
                3:
                  type: integer
                4:
                  type: integer
                5:
                  type: integer
    log:
      type: object
      properties:
        id:
          type: integer
          description: Log identifier
        action:
          type: string
          description: Action
        entity_type:
          type: string
          description: Entity type
        contact_id:
          type: integer
          description: Contact identifier
        pocket_id:
          type: integer
          description: Pocket identifier
        list_id:
          type: integer
          description: List identifier
        item_id:
          type: integer
          description: Item identifier
        comment_id:
          type: integer
          nullable: true
          description: Comment identifier
        attachment_id:
          type: integer
          nullable: true
          description: Attachment identifier
        location_id:
          type: integer
          nullable: true
          description: Location identifier
        additional_id:
          type: integer
          nullable: true
          description: Additional identifier
        assigned_contact_id:
          type: integer
          nullable: true
          description: Assigned contact identifier
        create_datetime:
          type: string
          format: datetime
          description: Server-generated log entry datetime (UTC)
        params:
          type: string
          description: Params, JSON
    response:
      allOf:
        - type: object
          properties:
            status_code:
              type: string
              description: Status code
              enum:
                - ok
                - error
            error:
              type: string
              description: Error description
        - $ref: '#/components/schemas/part_response'
    part_response:
      allOf:
        - type: object
          properties:
            data:
              type: array
              items:
                allOf:
                  - type: object
                    properties:
                      success:
                        type: boolean
                        description: Status code
                      errors:
                        type: array
                        items:
                          type: string
                          description: Error description
                  - type: object
                    properties:
                      data:
                        anyOf:
                          - $ref: '#/components/schemas/attachment'
                          - $ref: '#/components/schemas/comment'
                          - $ref: '#/components/schemas/item'
                          - $ref: '#/components/schemas/list'
                          - $ref: '#/components/schemas/location'
                          - $ref: '#/components/schemas/log'
                          - $ref: '#/components/schemas/pocket'
                          - $ref: '#/components/schemas/user'
        - type: object
          properties:
            meta:
              type: object
              properties:
                offset:
                  type: integer
                  description: Offset
                limit:
                  type: integer
                  description: Limit
                count:
                  type: integer
                  description: Count
