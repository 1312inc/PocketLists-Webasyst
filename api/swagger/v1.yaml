# validate https://editor.swagger.io/
openapi: 3.0.0
info:
  title: 'Pocket Lists API'
  description: ''
  version: 1.0.0
servers:
  - url: /api.php
    description: Current host server

paths:
  /pocketlists.item.add:
    put:
      security:
        - BearerAuth: [ ]
      summary: Добавить новый айтем
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                required:
                  - list_id
                properties:
                  list_id:
                    type: integer
                    description: List identifier
                  name:
                    type: string
                    description: Name
                  note:
                    type: string
                    description: Note
                  assigned_contact_id:
                    type: integer
                    nullable: true
                    description: Assigned contact identifier
                  priority:
                    type: integer
                    description: Priority
                  due_datetime:
                    type: string
                    format: date-time
                    nullable: true
                    description: Due datetime
                  files:
                    type: array
                    description: Files
                    items:
                      required:
                        - file
                        - file_name
                      type: object
                      properties:
                        file:
                          type: string
                          format: byte
                          description: File binary content
                        file_name:
                          type: string
                          description: File name
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/item'
                    - type: object
                      properties:
                        errors:
                          type: array
                          items:
                            type: string
                            description: Error description
                        attachment:
                          type: integer
                          description: Count attachment files
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        404:
          description: Pocket not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: Internal server error.
  /pocketlists.item.delete:
    delete:
      security:
        - BearerAuth: [ ]
      summary: Удалить айтем
      parameters:
        - in: query
          name: item_id
          description: Item identifier
          schema:
            type: integer
      responses:
        204:
          description: OK
        500:
          description: Internal server error.
  /pocketlists.item.getList:
    get:
      security:
        - BearerAuth: [ ]
      summary: Get items
      parameters:
        - in: query
          name: id
          description: ID айтема
          schema:
            type: integer
        - in: query
          name: list_id
          description: ID списка
          schema:
            type: integer
        - in: query
          name: starting_from
          description: Временная метка, начиная с которой возвращаются записи
          schema:
            type: integer
        - in: query
          name: offset
          description: Смещение списка (по умолчанию 0)
          schema:
            type: integer
        - in: query
          name: limit
          description: Размер порции списка (по умолчанию 30, максимум 500)
          schema:
            type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  offset:
                    type: integer
                    description: Offset
                  limit:
                    type: integer
                    description: Limit
                  count:
                    type: integer
                    description: Count
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/item'
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: Internal server error.
  /pocketlists.item.update:
    put:
      security:
        - BearerAuth: [ ]
      summary: Редактировать айтем
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - id
                - list_id
              properties:
                id:
                  type: integer
                  description: Item identifier
                list_id:
                  type: integer
                  description: List identifier
                name:
                  type: string
                  description: Item name
                note:
                  type: string
                  description: Note
                assigned_contact_id:
                  type: integer
                  description: Assigned contact identifier
                priority:
                  type: integer
                  description: Priority
                due_datetime:
                  type: string
                  format: date-time
                  description: Due datetime
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/item'
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        403:
          description: Access denied to the Pocket Lists app or this API method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: Internal server error.
  /pocketlists.list.add:
    put:
      security:
        - BearerAuth: [ ]
      summary: Добавить новый список
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                required:
                  - name
                  - pocket_id
                properties:
                  pocket_id:
                    type: integer
                    description: ID проекта
                  name:
                    type: string
                    description: Название списка
                  color:
                    type: string
                    description: Color
                  icon:
                    type: string
                    description: Icon
                  type:
                    type: string
                    default: checklist
                    description: |
                      Тип списка
                      + checklist - перечень дел
                      + notes - заметки
                    enum:
                      - checklist
                      - notes
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - type: object
                      properties:
                        errors:
                          type: array
                          items:
                            type: string
                            description: Error description
                    - type: object
                      properties:
                        id:
                          type: integer
                          description: ID списка
                        pocket_id:
                          type: integer
                          description: Pocket identifier
                        name:
                          type: string
                          description: Name list
                        color:
                          type: string
                          description: Color
                        icon:
                          type: string
                          description: Icon
                        type:
                          type: string
                          description: List type
                        key_item_id:
                          type: integer
                          description: Key item
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        403:
          description: Access denied to the Pocket Lists app or this API method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        404:
          description: Pocket not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: Internal server error.
  /pocketlists.list.delete:
    delete:
      security:
        - BearerAuth: [ ]
      summary: Удалить список
      parameters:
        - in: query
          name: list_id
          description: List identifier
          schema:
            type: integer
      responses:
        204:
          description: OK
        500:
          description: Internal server error.
  /pocketlists.list.getList:
    get:
      security:
        - BearerAuth: [ ]
      summary: Получить список
      parameters:
        - in: query
          name: id
          description: ID списка
          schema:
            type: integer
        - in: query
          name: starting_from
          description: Временная метка, начиная с которой возвращаются записи
          schema:
            type: integer
        - in: query
          name: offset
          description: Смещение списка (по умолчанию 0)
          schema:
            type: integer
        - in: query
          name: limit
          description: Размер порции списка (по умолчанию 30, максимум 500)
          schema:
            type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  offset:
                    type: integer
                    description: Offset
                  limit:
                    type: integer
                    description: Limit
                  count:
                    type: integer
                    description: Count
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          description: List identifier
                        name:
                          type: string
                          description: Name list
                        contact_id:
                          type: integer
                          description: Contact identifier
                        pocket_id:
                          type: integer
                          description: Pocket identifier
                        type:
                          type: string
                          description: List type
                        icon:
                          type: string
                          description: Icon
                        color:
                          type: string
                          description: Color
                        sort:
                          type: integer
                          description: Sort
                        create_datetime:
                          type: string
                          format: date-time
                          description: Create datetime
                        update_datetime:
                          type: string
                          format: date-time
                          description: Update datetime
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        403:
          description: Access denied to the Pocket Lists app or this API method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: Internal server error.
  /pocketlists.list.update:
    put:
      security:
        - BearerAuth: [ ]
      summary: Редактировать список
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - id
              properties:
                id:
                  type: integer
                  description: List identifier
                name:
                  type: string
                  description: Name list
                icon:
                  type: string
                  description: Icon
                color:
                  type: string
                  description: Color
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  pocket_id:
                    type: integer
                    description: Pocket identifier
                  type:
                    type: string
                    description: |
                      Тип списка
                      + checklist - перечень дел
                      + notes - заметки
                    enum:
                      - checklist
                      - notes
                  icon:
                    type: string
                    description: Icon
                  archived:
                    type: boolean
                    description: Перемещен в архив
                  hash:
                    type: string
                    nullable: true
                    description: Hash
                  color:
                    type: string
                    description: Color
                  passcode:
                    type: string
                    nullable: true
                    description: Passcode
                  key_item_id:
                    type: integer
                    description: Key item identifier
                  items_count:
                    type: integer
                    nullable: true
                    description: Items count
                  max_priority:
                    type: integer
                    description: Max priority
                  min_due_date:
                    type: string
                    nullable: true
                    format: date
                    description: Min due date
                  min_due_datetime:
                    type: string
                    nullable: true
                    format: date-time
                    description: Min due date time
                  id:
                    type: integer
                    description: List identifier
                  contact_id:
                    type: integer
                    description: Contact identifier
                  sort:
                    type: integer
                    description: Sort
                  create_datetime:
                    type: string
                    format: date-time
                    description: Create datetime
                  update_datetime:
                    type: string
                    format: date-time
                    description: Update datetime
                  complete_datetime:
                    type: string
                    format: date-time
                    nullable: true
                    description: Complete datetime
                  complete_contact_id:
                    type: integer
                    nullable: true
                    description: Complete contact identifier
                  name:
                    type: string
                    description: Name list
                  status:
                    type: integer
                    description: Status
                  has_children:
                    type: boolean
                    description: Has children
                  priority:
                    type: integer
                    description: Priority
                  calc_priority:
                    type: integer
                    description: Calc priority
                  parent_id:
                    type: integer
                    nullable: true
                    description: Parent identifier
                  list_id:
                    type: integer
                    nullable: true
                    description: List identifier
                  note:
                    type: string
                    nullable: true
                    description: Note
                  due_date:
                    type: string
                    format: date
                    nullable: true
                    description: Due date
                  due_datetime:
                    type: string
                    format: date-time
                    nullable: true
                    description: Due datetime
                  location_id:
                    type: integer
                    nullable: true
                    description: Location identifier
                  amount:
                    type: number
                    description: Amount
                  currency_iso3:
                    type: string
                    nullable: true
                    description: Currency ISO3
                  assigned_contact_id:
                    type: integer
                    nullable: true
                    description: Assigned contact identifier
                  repeat:
                    type: string
                    nullable: true
                    description: Repeat
                  key_list_id:
                    type: integer
                    description: Key list identifier
                  favorite:
                    type: boolean
                    description: Favorite
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: Internal server error.
  /pocketlists.log.get:
    get:
      security:
        - BearerAuth: [ ]
      summary: Получить историю
      parameters:
        - in: query
          name: offset
          description: Смещение списка (по умолчанию 0)
          schema:
            type: integer
        - in: query
          name: limit
          description: Размер порции списка (по умолчанию 30, максимум 500)
          schema:
            type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      description: Log identifier
                    action:
                      type: string
                      description: Action
                    entity_type:
                      type: string
                      description: Entity type
                    contact_id:
                      type: integer
                      description: Contact identifier
                    pocket_id:
                      type: integer
                      description: Pocket identifier
                    list_id:
                      type: integer
                      description: List identifier
                    item_id:
                      type: integer
                      description: Item identifier
                    comment_id:
                      type: integer
                      nullable: true
                      description: Comment identifier
                    attachment_id:
                      type: integer
                      nullable: true
                      description: Attachment identifier
                    location_id:
                      type: integer
                      nullable: true
                      description: Location identifier
                    additional_id:
                      type: integer
                      nullable: true
                      description: Additional identifier
                    assigned_contact_id:
                      type: integer
                      nullable: true
                      description: Assigned contact identifier
                    create_datetime:
                      type: string
                      format: datetime
                      description: Create datetime
                    params:
                      type: string
                      description: Params, JSON
        500:
          description: Internal server error.
  /pocketlists.pocket.add:
    put:
      security:
        - BearerAuth: [ ]
      summary: Добавить новый проект
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
                  description: Название проекта
                color:
                  type: string
                  description: Цвет
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: ID проекта
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: Internal server error.
  /pocketlists.pocket.delete:
    delete:
      security:
        - BearerAuth: [ ]
      summary: Удалить проект
      parameters:
        - in: query
          name: pocket_id
          description: Pocket identifier
          schema:
            type: integer
      responses:
        204:
          description: OK
        500:
          description: Internal server error.
  /pocketlists.pocket.getList:
    get:
      security:
        - BearerAuth: [ ]
      summary: Получить проект
      parameters:
        - in: query
          name: id
          description: ID проекта
          schema:
            type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  offset:
                    type: integer
                    description: Offset
                  limit:
                    type: integer
                    description: Limit
                  count:
                    type: integer
                    description: Count
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          description: Pocket identifier
                        sort:
                          type: integer
                          description: Sort
                        name:
                          type: string
                          description: Pocket name
                        color:
                          type: string
                          description: Color
                        passcode:
                          type: string
                          nullable: true
                          description: Passcode
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /pocketlists.pocket.update:
    put:
      security:
        - BearerAuth: [ ]
      summary: Редактировать проект
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - id
              properties:
                id:
                  type: integer
                  description: Pocket identifier
                name:
                  type: string
                  description: Название проекта
                color:
                  type: string
                  description: Цвет
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: Pocket identifier
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: Internal server error.
  /pocketlists.system.getCurrentTimestamp:
    get:
      security:
        - BearerAuth: [ ]
      summary: Получить текущую временную метку
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: integer
                description: Current timestamp
  /pocketlists.user.getList:
    get:
      security:
        - BearerAuth: [ ]
      summary: Список команды
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  offset:
                    type: integer
                    description: Offset
                  limit:
                    type: integer
                    description: Limit
                  count:
                    type: integer
                    description: Count
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        username:
                          type: string
                        photo_url:
                          type: string
                        user_pic:
                          type: string
                        status:
                          type: string
                        team_role:
                          type: string
                        login:
                          type: string
                        me:
                          type: boolean
                        exists:
                          type: boolean
                        last_activity:
                          type: string
                          format: datetime
                        email:
                          type: string
                        locale:
                          type: string
                        list_activities:
                          type: array
                          items:
                            type: object
                            properties:
                              list_id:
                                type: integer
                              contact_id:
                                type: integer
                              last_date:
                                type: string
                                format: datetime
                        items_info:
                          type: object
                          properties:
                            count:
                              type: integer
                            count_priority:
                              type: integer
                            max_priority:
                              type: integer
                            count_max_priority:
                              type: integer
                            count_priorities:
                              type: object
                              properties:
                                0:
                                  type: integer
                                1:
                                  type: integer
                                2:
                                  type: integer
                                3:
                                  type: integer
                                4:
                                  type: integer
                                5:
                                  type: integer
        500:
          description: Internal server error.

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
  schemas:
    item:
      type: object
      properties:
        id:
          type: integer
          description: Item identifier
        list_id:
          type: integer
          nullable: true
          description: List identifier
        contact_id:
          type: integer
          description: Contact identifier
        parent_id:
          type: integer
          description: Parent identifier
        sort:
          type: integer
          description: Sort
        has_children:
          type: boolean
          description: Has children
        status:
          type: integer
          description: Status
        priority:
          type: integer
          description: Priority
        calc_priority:
          type: integer
          description: Calc priority
        create_datetime:
          type: string
          format: date-time
          description: Create datetime
        update_datetime:
          type: string
          format: date-time
          nullable: true
          description: Update datetime
        complete_datetime:
          type: string
          format: date-time
          nullable: true
          description: Complete datetime
        complete_contact_id:
          type: integer
          nullable: true
          description: Complete contact identifier
        name:
          type: string
          description: Name item
        note:
          type: string
          description: Note item
        due_date:
          type: string
          format: date
          nullable: true
          description: Due date
        due_datetime:
          type: string
          format: date-time
          nullable: true
          description: Due datetime
        location_id:
          type: integer
          nullable: true
          description: Location identifier
        amount:
          type: number
          description: Amount
        currency_iso3:
          type: string
          description: Currency ISO3
        assigned_contact_id:
          type: integer
          nullable: true
          description: Assigned contact identifier
        repeat:
          type: integer
          description: Repeat
        key_list_id:
          type: integer
          description: Key list identifier
        favorite:
          type: boolean
          description: Favorite
        attachments_count:
          type: integer
          description: Attachments count
        comments_count:
          type: integer
          description: Comments count
        linked_entities_count:
          type: integer
          description: Linked entities count
    errorResponse:
      type: object
      properties:
        error:
          type: string
          description: Error code
        error_description:
          type: string
          description: Error description
